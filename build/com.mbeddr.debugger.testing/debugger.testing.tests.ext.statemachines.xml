<project name="com.mbeddr.debugger.testing.tests.ext.statemachines.build" default="build">
  <!-- Generated by MPS -->
  <property name="build.dir" location="build" />
  <property name="build.tmp" location="${build.dir}/tmp/com.mbeddr.debugger.testing.tests.ext.statemachines.build" />
  <property name="build.layout" location="${build.dir}/artifacts/com.mbeddr.debugger.testing.tests.ext.statemachines.build" />
  <property name="mps_home" location="${basedir}/../../../../../../../../Applications/MPS25.app" />
  <property name="mbeddr.github.core.home" location="${basedir}/../../" />
  <property name="multiline.artifacts" location="" />
  <property name="richtext.artifacts" location="" />
  <property name="artifacts.buildMPS" location="${mps_home}" />
  <property name="artifacts.com.mbeddr.spawner.build" location="../com.mbeddr.spawner/build/artifacts/com.mbeddr.spawner.build" />
  <property name="artifacts.com.mbeddr.core.build" location="../com.mbeddr.core/build/artifacts/com.mbeddr.core.build" />
  <property name="artifacts.com.mbeddr.debugger.build" location="../com.mbeddr.debugger/build/artifacts/com.mbeddr.debugger.build" />
  <property name="artifacts.com.mbeddr.mpsutil.build" location="../com.mbeddr.mpsutil/build/artifacts/com.mbeddr.mpsutil.build" />
  <property name="artifacts.com.mbeddr.ext.components" location="../com.mbeddr.ext/build/artifacts/com.mbeddr.ext.components" />
  <property name="artifacts.com.mbeddr.debugger.testing.tests.cross.build" location="${build.dir}/artifacts/com.mbeddr.debugger.testing.tests.cross.build" />
  <property name="artifacts.com.mbeddr.debugger.testing.build" location="${build.dir}/artifacts/com.mbeddr.debugger.testing.build" />
  <property name="artifacts.buildDeprecatedBuildlanguage" location="${mps_home}/plugins/mps-obsolete" />
  <property name="artifacts.mps-richtext" location="${richtext.artifacts}" />
  <property name="artifacts.mps-multiline" location="${multiline.artifacts}" />
  <property file="${artifacts.buildMPS}/build.properties" prefix="import.buildMPS" />
  <property file="${artifacts.com.mbeddr.core.build}/build.properties" prefix="import.com.mbeddr.core.build" />
  <property name="buildMPS.build.number" value="${import.buildMPS.buildMPS.build.number}" />
  <property name="buildMPS.date" value="${import.buildMPS.buildMPS.date}" />
  <property name="buildMPS.build.vcs.number" value="${import.buildMPS.buildMPS.build.vcs.number}" />
  <property name="buildMPS.teamcity.buildConfName" value="${import.buildMPS.buildMPS.teamcity.buildConfName}" />
  <property name="buildMPS.idea.platform.build.number" value="${import.buildMPS.buildMPS.idea.platform.build.number}" />
  <property name="buildCore.version" value="${import.buildMPS.buildCore.version}" />
  <property name="com.mbeddr.mpsutil.build.build.number" value="${import.com.mbeddr.core.build.com.mbeddr.mpsutil.build.build.number}" />
  
  <path id="path.mps.ant.path">
    <pathelement location="${artifacts.buildMPS}/lib/mps-backend.jar" />
    <pathelement location="${artifacts.buildMPS}/lib/jdom.jar" />
    <pathelement location="${artifacts.buildMPS}/lib/log4j.jar" />
    <pathelement location="${artifacts.buildMPS}/lib/mps-core.jar" />
  </path>
  
  <target name="assemble" depends="classes">
    <mkdir dir="${build.layout}" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.debugger.testing.tests.ext.statemachines.zip" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.debugger.testing.tests.ext.statemachines.zip/debugger.testing.tests.ext.statemachines" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.debugger.testing.tests.ext.statemachines.zip/debugger.testing.tests.ext.statemachines/META-INF" />
    <echoxml file="${build.tmp}/default/com.mbeddr.debugger.testing.tests.ext.statemachines.zip/debugger.testing.tests.ext.statemachines/META-INF/plugin.xml">
      <idea-plugin version="2" xmlns:xi="http://www.w3.org/2001/XInclude">
        <id>com.mbeddr.debugger.testing.tests.ext.statemachines</id>
        <name>com.mbeddr.debugger.testing.tests.ext.statemachines</name>
        <version>1.0</version>
        <depends>jetbrains.mps.core</depends>
        <depends>com.mbeddr.core</depends>
        <depends>com.mbeddr.spawner</depends>
        <depends>com.mbeddr.debugger</depends>
        <depends>com.mbeddr.debugger.testing.tests.cross</depends>
        <depends>com.mbeddr.mpsutil</depends>
        <depends>com.mbeddr.debugger.testing</depends>
        <depends>com.mbeddr.ext.components</depends>
        <depends>de.slisson.mps.editor.multiline</depends>
        <depends>de.slisson.mps.richtext</depends>
        
        <extensions defaultExtensionNs="com.intellij">
          <mps.LanguageLibrary dir="/languages" />
        </extensions>
      </idea-plugin>
    </echoxml>
    <mkdir dir="${build.tmp}/default/com.mbeddr.debugger.testing.tests.ext.statemachines.zip/debugger.testing.tests.ext.statemachines/languages" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.debugger.testing.tests.ext.statemachines.zip/debugger.testing.tests.ext.statemachines/languages/com.mbeddr.debugger.testing.test.ext.statemachines" />
    <mkdir dir="${build.tmp}/default/test.debugging.ext.statemachines.jar" />
    <mkdir dir="${build.tmp}/default/test.debugging.ext.statemachines.jar/META-INF" />
    <echoxml file="${build.tmp}/default/test.debugging.ext.statemachines.jar/META-INF/module.xml">
      <module namespace="test.debugging.ext.statemachines" type="solution" uuid="fe5c0028-7b17-4eb8-9f6c-04a138aa2de5">
        <dependencies />
        <sources jar="test.debugging.ext.statemachines-src.jar" descriptor="test.debugging.ext.statemachines.msd" />
      </module>
    </echoxml>
    <jar destfile="${build.tmp}/default/com.mbeddr.debugger.testing.tests.ext.statemachines.zip/debugger.testing.tests.ext.statemachines/languages/com.mbeddr.debugger.testing.test.ext.statemachines/test.debugging.ext.statemachines.jar">
      <fileset dir="${build.tmp}/java/out/test.debugging.ext.statemachines" />
      <fileset dir="${mbeddr.github.core.home}/code/languages/com.mbeddr.debugger.tests/tests/test.debugging.ext.statemachines" includes="icons/**, resources/**" />
      <fileset dir="${build.tmp}/default/test.debugging.ext.statemachines.jar" />
    </jar>
    <jar destfile="${build.tmp}/default/com.mbeddr.debugger.testing.tests.ext.statemachines.zip/debugger.testing.tests.ext.statemachines/languages/com.mbeddr.debugger.testing.test.ext.statemachines/test.debugging.ext.statemachines-src.jar">
      <fileset dir="${mbeddr.github.core.home}/code/languages/com.mbeddr.debugger.tests/tests/test.debugging.ext.statemachines/source_gen" includes="**/*.java" />
      <zipfileset file="${mbeddr.github.core.home}/code/languages/com.mbeddr.debugger.tests/tests/test.debugging.ext.statemachines/test.debugging.ext.statemachines.msd" prefix="module" />
      <zipfileset dir="${mbeddr.github.core.home}/code/languages/com.mbeddr.debugger.tests/tests/test.debugging.ext.statemachines/models" includes="**/*.mps, **/*.metadata, **/*.history" prefix="module/models" />
    </jar>
    <zip destfile="${build.layout}/com.mbeddr.debugger.testing.tests.ext.statemachines.zip">
      <fileset dir="${build.tmp}/default/com.mbeddr.debugger.testing.tests.ext.statemachines.zip" />
    </zip>
    <echo file="${build.layout}/build.properties">buildMPS.build.number=${buildMPS.build.number}${line.separator}buildMPS.date=${buildMPS.date}${line.separator}buildMPS.build.vcs.number=${buildMPS.build.vcs.number}${line.separator}buildMPS.teamcity.buildConfName=${buildMPS.teamcity.buildConfName}${line.separator}buildMPS.idea.platform.build.number=${buildMPS.idea.platform.build.number}${line.separator}buildCore.version=${buildCore.version}${line.separator}com.mbeddr.mpsutil.build.build.number=${com.mbeddr.mpsutil.build.build.number}</echo>
  </target>
  
  <target name="buildDependents">
    <ant antfile="../com.mbeddr.spawner/build.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="../com.mbeddr.core/build.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="../com.mbeddr.debugger/build.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="../com.mbeddr.mpsutil/build.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="../com.mbeddr.ext/build-components.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="debugger.testing.tests.cross.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="debugger-testing.xml" inheritAll="false" useNativeBasedir="true" />
  </target>
  
  <target name="fetchDependencies">
    <mkdir dir="${build.tmp}/deps/mps-multiline/mps-multiline.zip" />
    <unzip src="${artifacts.mps-multiline}/mps-multiline.zip" dest="${build.tmp}/deps/mps-multiline/mps-multiline.zip" />
    <mkdir dir="${build.tmp}/deps/com.mbeddr.ext.components/com.mbeddr.ext.components.zip" />
    <unzip src="${artifacts.com.mbeddr.ext.components}/com.mbeddr.ext.components.zip" dest="${build.tmp}/deps/com.mbeddr.ext.components/com.mbeddr.ext.components.zip" />
    <mkdir dir="${build.tmp}/deps/com.mbeddr.debugger.testing.tests.cross.build/com.mbeddr.debugger.testing.tests.cross.zip" />
    <unzip src="${artifacts.com.mbeddr.debugger.testing.tests.cross.build}/com.mbeddr.debugger.testing.tests.cross.zip" dest="${build.tmp}/deps/com.mbeddr.debugger.testing.tests.cross.build/com.mbeddr.debugger.testing.tests.cross.zip" />
    <mkdir dir="${build.tmp}/deps/com.mbeddr.debugger.build/com.mbeddr.core.debugger.zip" />
    <unzip src="${artifacts.com.mbeddr.debugger.build}/com.mbeddr.core.debugger.zip" dest="${build.tmp}/deps/com.mbeddr.debugger.build/com.mbeddr.core.debugger.zip" />
    <mkdir dir="${build.tmp}/deps/com.mbeddr.mpsutil.build/com.mbeddr.mpsutil.zip" />
    <unzip src="${artifacts.com.mbeddr.mpsutil.build}/com.mbeddr.mpsutil.zip" dest="${build.tmp}/deps/com.mbeddr.mpsutil.build/com.mbeddr.mpsutil.zip" />
    <mkdir dir="${build.tmp}/deps/com.mbeddr.debugger.testing.build/com.mbeddr.debugger.testing.zip" />
    <unzip src="${artifacts.com.mbeddr.debugger.testing.build}/com.mbeddr.debugger.testing.zip" dest="${build.tmp}/deps/com.mbeddr.debugger.testing.build/com.mbeddr.debugger.testing.zip" />
    <mkdir dir="${build.tmp}/deps/mps-richtext/mps-richtext.zip" />
    <unzip src="${artifacts.mps-richtext}/mps-richtext.zip" dest="${build.tmp}/deps/mps-richtext/mps-richtext.zip" />
    <mkdir dir="${build.tmp}/deps/com.mbeddr.core.build/com.mbeddr.core.zip" />
    <unzip src="${artifacts.com.mbeddr.core.build}/com.mbeddr.core.zip" dest="${build.tmp}/deps/com.mbeddr.core.build/com.mbeddr.core.zip" />
  </target>
  
  <target name="build" depends="assemble, check" />
  
  <target name="clean">
    <delete dir="${build.tmp}" />
    <delete dir="${build.layout}" />
  </target>
  
  <target name="compileJava" depends="java.compile.test.debugging.ext.statemachines" />
  
  <target name="processResources" />
  
  <target name="classes" depends="compileJava, processResources" />
  
  <target name="test" depends="classes" />
  
  <target name="check" depends="test" />
  
  <target name="java.compile.test.debugging.ext.statemachines">
    <mkdir dir="${build.tmp}/java/out/test.debugging.ext.statemachines" />
    <javac destdir="${build.tmp}/java/out/test.debugging.ext.statemachines" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${mbeddr.github.core.home}/code/languages/com.mbeddr.debugger.tests/tests/test.debugging.ext.statemachines/source_gen" />
      </src>
      <classpath />
    </javac>
  </target>
  
  <target name="declare-mps-tasks">
    <taskdef resource="jetbrains/mps/build/ant/antlib.xml" classpathref="path.mps.ant.path" />
  </target>
  
  <target name="generate" depends="declare-mps-tasks">
    <echo message="generating" />
    <generate parallelMode="true" fork="true">
      <plugin path="${artifacts.buildMPS}/plugins/mps-build" />
      <plugin path="${artifacts.buildMPS}/plugins/mps-debugger-api" />
      <plugin path="${build.tmp}/deps/com.mbeddr.core.build/com.mbeddr.core.zip/mbeddr.core" />
      <plugin path="${build.tmp}/deps/com.mbeddr.debugger.build/com.mbeddr.core.debugger.zip/debugger" />
      <plugin path="${build.tmp}/deps/com.mbeddr.debugger.testing.build/com.mbeddr.debugger.testing.zip/debugger.testing" />
      <plugin path="${build.tmp}/deps/com.mbeddr.debugger.testing.tests.cross.build/com.mbeddr.debugger.testing.tests.cross.zip/debugger.testing.tests.cross" />
      <plugin path="${build.tmp}/deps/com.mbeddr.ext.components/com.mbeddr.ext.components.zip/mbeddr.components" />
      <plugin path="${build.tmp}/deps/com.mbeddr.mpsutil.build/com.mbeddr.mpsutil.zip/mbeddr.mpsutil" />
      <plugin path="${build.tmp}/deps/mps-multiline/mps-multiline.zip/mps-multiline" />
      <plugin path="${build.tmp}/deps/mps-richtext/mps-richtext.zip/mps-richtext" />
      <chunk>
        <module file="${mbeddr.github.core.home}/code/languages/com.mbeddr.debugger.tests/tests/test.debugging.ext.statemachines/test.debugging.ext.statemachines.msd" />
      </chunk>
    </generate>
  </target>
  
  <target name="cleanSources">
    <delete dir="${mbeddr.github.core.home}/code/languages/com.mbeddr.debugger.tests/tests/test.debugging.ext.statemachines/source_gen" />
  </target>
</project>