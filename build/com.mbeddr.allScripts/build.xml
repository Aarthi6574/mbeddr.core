<project name="com.mbeddr.allScripts.build" default="build">
  <!-- Generated by MPS -->
  <property name="build.dir" location="build" />
  <property name="build.tmp" location="${build.dir}/tmp/com.mbeddr.allScripts.build" />
  <property name="build.layout" location="${build.dir}/artifacts/com.mbeddr.allScripts.build" />
  <property name="mps.home" location="${basedir}/../../../../../.." />
  <property name="mbeddr.github.core.home" location="${basedir}/../.." />
  <property name="mbeddr.build" location="${mbeddr.github.core.home}/code/languages/com.mbeddr.build" />
  <property name="lisson.home" location="${mbeddr.github.core.home}/build" />
  <property name="multiline.artifacts" location="${lisson.home}/mps-multiline/build/artifacts/mps-multiline" />
  <property name="tables.artifacts" location="${lisson.home}/mps-tables/build/artifacts/mps-tables" />
  <property name="richtext.artifacts" location="${lisson.home}/mps-richtext/build/artifacts/mps-richtext" />
  <property name="spawner.artifacts" location="${basedir}/../com.mbeddr.spawner/build/artifacts/com.mbeddr.spawner.build" />
  <property name="artifacts.mps" location="${mps.home}" />
  <property name="artifacts.mps-richtext" location="${richtext.artifacts}" />
  <property name="artifacts.mps-multiline" location="${multiline.artifacts}" />
  <property name="artifacts.mps-tables" location="${tables.artifacts}" />
  <property file="${artifacts.mps}/build.properties" prefix="import.mps" />
  <property name="mps.build.number" value="${import.mps.mps.build.number}" />
  <property name="mps.date" value="${import.mps.mps.date}" />
  <property name="mps.build.vcs.number" value="${import.mps.mps.build.vcs.number}" />
  <property name="mps.teamcity.buildConfName" value="${import.mps.mps.teamcity.buildConfName}" />
  <property name="mps.idea.platform.build.number" value="${import.mps.mps.idea.platform.build.number}" />
  <property name="mpsBootstrapCore.version" value="${import.mps.mpsBootstrapCore.version}" />
  
  <path id="path.mps.ant.path">
    <pathelement location="${artifacts.mps}/lib/ant/lib/ant-mps.jar" />
    <pathelement location="${artifacts.mps}/lib/jdom.jar" />
    <pathelement location="${artifacts.mps}/lib/log4j.jar" />
  </path>
  
  <target name="assemble" depends="classes, declare-mps-tasks">
    <mkdir dir="${build.layout}" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.allScripts.zip" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/META-INF" />
    <echoxml file="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/META-INF/plugin.xml">
      <idea-plugin version="2" xmlns:xi="http://www.w3.org/2001/XInclude">
        <id>com.mbeddr.allScripts</id>
        <name>com.mbeddr.allScripts</name>
        <version>1.0</version>
        <depends>jetbrains.mps.core</depends>
        <depends>jetbrains.mps.debugger.api</depends>
        <depends>jetbrains.mps.execution.api</depends>
        <depends>jetbrains.mps.execution.languages</depends>
        <depends>de.slisson.mps.richtext</depends>
        <depends>de.slisson.mps.tables</depends>
        <depends>de.slisson.mps.editor.multiline</depends>
        
        <extensions defaultExtensionNs="com.intellij">
          <mps.LanguageLibrary dir="/languages" />
        </extensions>
      </idea-plugin>
    </echoxml>
    <mkdir dir="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.cc.req.dev.build.jar" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.cc.req.dev.build.jar/META-INF" />
    <echoxml file="${build.tmp}/default/com.mbeddr.cc.req.dev.build.jar/META-INF/module.xml">
      <module namespace="com.mbeddr.cc.req.dev.build" type="solution" uuid="069b04b3-7338-4781-80fa-9e8b854877d2">
        <dependencies />
        <sources jar="com.mbeddr.cc.req.dev.build-src.jar" descriptor="build.msd" />
      </module>
    </echoxml>
    <jar destfile="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages/com.mbeddr.cc.req.dev.build.jar">
      <fileset dir="${build.tmp}/java/out/com.mbeddr.cc.req.dev.build" />
      <fileset dir="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.cc.dev.build" includes="icons/**, resources/**" />
      <fileset dir="${build.tmp}/default/com.mbeddr.cc.req.dev.build.jar" />
    </jar>
    <copyModels todir="${build.tmp}/customProcessors/copyModels/solutions-com.mbeddr.cc.dev.build-models">
      <fileset dir="${mbeddr.build}/solutions/com.mbeddr.cc.dev.build/models" includes="**/*.mps, **/*.metadata, **/*.history, **/*.mpsr, **/.model" />
    </copyModels>
    <jar destfile="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages/com.mbeddr.cc.req.dev.build-src.jar">
      <fileset dir="${mbeddr.build}/solutions/com.mbeddr.cc.dev.build/source_gen" includes="**/*.java" />
      <zipfileset file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.cc.dev.build/build.msd" prefix="module" />
      <zipfileset dir="${build.tmp}/customProcessors/copyModels/solutions-com.mbeddr.cc.dev.build-models" prefix="module/models" />
    </jar>
    <mkdir dir="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.cc.ple.dev.build.jar" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.cc.ple.dev.build.jar/META-INF" />
    <echoxml file="${build.tmp}/default/com.mbeddr.cc.ple.dev.build.jar/META-INF/module.xml">
      <module namespace="com.mbeddr.cc.ple.dev.build" type="solution" uuid="b22c9f3a-bcc2-4f68-901a-f574ebc81e23">
        <dependencies />
        <sources jar="com.mbeddr.cc.ple.dev.build-src.jar" descriptor="com.mbeddr.cc.ple.dev.build.msd" />
      </module>
    </echoxml>
    <jar destfile="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages/com.mbeddr.cc.ple.dev.build.jar">
      <fileset dir="${build.tmp}/java/out/com.mbeddr.cc.ple.dev.build" />
      <fileset dir="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.cc.ple.dev.build" includes="icons/**, resources/**" />
      <fileset dir="${build.tmp}/default/com.mbeddr.cc.ple.dev.build.jar" />
    </jar>
    <copyModels todir="${build.tmp}/customProcessors/copyModels/solutions-com.mbeddr.cc.ple.dev.build-models">
      <fileset dir="${mbeddr.build}/solutions/com.mbeddr.cc.ple.dev.build/models" includes="**/*.mps, **/*.metadata, **/*.history, **/*.mpsr, **/.model" />
    </copyModels>
    <jar destfile="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages/com.mbeddr.cc.ple.dev.build-src.jar">
      <fileset dir="${mbeddr.build}/solutions/com.mbeddr.cc.ple.dev.build/source_gen" includes="**/*.java" />
      <zipfileset file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.cc.ple.dev.build/com.mbeddr.cc.ple.dev.build.msd" prefix="module" />
      <zipfileset dir="${build.tmp}/customProcessors/copyModels/solutions-com.mbeddr.cc.ple.dev.build-models" prefix="module/models" />
    </jar>
    <mkdir dir="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.cc.tests.dev.build.jar" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.cc.tests.dev.build.jar/META-INF" />
    <echoxml file="${build.tmp}/default/com.mbeddr.cc.tests.dev.build.jar/META-INF/module.xml">
      <module namespace="com.mbeddr.cc.tests.dev.build" type="solution" uuid="ffd31df9-5187-4c9a-bb4f-d84e5f59ffd5">
        <dependencies />
        <sources jar="com.mbeddr.cc.tests.dev.build-src.jar" descriptor="com.mbeddr.cc.tests.dev.build.msd" />
      </module>
    </echoxml>
    <jar destfile="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages/com.mbeddr.cc.tests.dev.build.jar">
      <fileset dir="${build.tmp}/java/out/com.mbeddr.cc.tests.dev.build" />
      <fileset dir="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.cc.tests.dev.build" includes="icons/**, resources/**" />
      <fileset dir="${build.tmp}/default/com.mbeddr.cc.tests.dev.build.jar" />
    </jar>
    <copyModels todir="${build.tmp}/customProcessors/copyModels/solutions-com.mbeddr.cc.tests.dev.build-models">
      <fileset dir="${mbeddr.build}/solutions/com.mbeddr.cc.tests.dev.build/models" includes="**/*.mps, **/*.metadata, **/*.history, **/*.mpsr, **/.model" />
    </copyModels>
    <jar destfile="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages/com.mbeddr.cc.tests.dev.build-src.jar">
      <fileset dir="${mbeddr.build}/solutions/com.mbeddr.cc.tests.dev.build/source_gen" includes="**/*.java" />
      <zipfileset file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.cc.tests.dev.build/com.mbeddr.cc.tests.dev.build.msd" prefix="module" />
      <zipfileset dir="${build.tmp}/customProcessors/copyModels/solutions-com.mbeddr.cc.tests.dev.build-models" prefix="module/models" />
    </jar>
    <mkdir dir="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.doc.dev.build.jar" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.doc.dev.build.jar/META-INF" />
    <echoxml file="${build.tmp}/default/com.mbeddr.doc.dev.build.jar/META-INF/module.xml">
      <module namespace="com.mbeddr.doc.dev.build" type="solution" uuid="09682559-86e1-4aeb-96a1-833a77c65c70">
        <dependencies />
        <sources jar="com.mbeddr.doc.dev.build-src.jar" descriptor="com.mbeddr.doc.dev.build.msd" />
      </module>
    </echoxml>
    <jar destfile="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages/com.mbeddr.doc.dev.build.jar">
      <fileset dir="${build.tmp}/java/out/com.mbeddr.doc.dev.build" />
      <fileset dir="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.doc.dev.build" includes="icons/**, resources/**" />
      <fileset dir="${build.tmp}/default/com.mbeddr.doc.dev.build.jar" />
    </jar>
    <copyModels todir="${build.tmp}/customProcessors/copyModels/solutions-com.mbeddr.doc.dev.build-models">
      <fileset dir="${mbeddr.build}/solutions/com.mbeddr.doc.dev.build/models" includes="**/*.mps, **/*.metadata, **/*.history, **/*.mpsr, **/.model" />
    </copyModels>
    <jar destfile="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages/com.mbeddr.doc.dev.build-src.jar">
      <fileset dir="${mbeddr.build}/solutions/com.mbeddr.doc.dev.build/source_gen" includes="**/*.java" />
      <zipfileset file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.doc.dev.build/com.mbeddr.doc.dev.build.msd" prefix="module" />
      <zipfileset dir="${build.tmp}/customProcessors/copyModels/solutions-com.mbeddr.doc.dev.build-models" prefix="module/models" />
    </jar>
    <mkdir dir="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.ext.units.dev.build.jar" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.ext.units.dev.build.jar/META-INF" />
    <echoxml file="${build.tmp}/default/com.mbeddr.ext.units.dev.build.jar/META-INF/module.xml">
      <module namespace="com.mbeddr.ext.units.dev.build" type="solution" uuid="f6afc6fd-b457-466c-a827-e7a30a77eeb1">
        <dependencies />
        <sources jar="com.mbeddr.ext.units.dev.build-src.jar" descriptor="com.mbeddr.ext.units.dev.build.msd" />
      </module>
    </echoxml>
    <jar destfile="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages/com.mbeddr.ext.units.dev.build.jar">
      <fileset dir="${build.tmp}/java/out/com.mbeddr.ext.units.dev.build" />
      <fileset dir="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.ext.units.dev.build" includes="icons/**, resources/**" />
      <fileset dir="${build.tmp}/default/com.mbeddr.ext.units.dev.build.jar" />
    </jar>
    <copyModels todir="${build.tmp}/customProcessors/copyModels/solutions-com.mbeddr.ext.units.dev.build-models">
      <fileset dir="${mbeddr.build}/solutions/com.mbeddr.ext.units.dev.build/models" includes="**/*.mps, **/*.metadata, **/*.history, **/*.mpsr, **/.model" />
    </copyModels>
    <jar destfile="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages/com.mbeddr.ext.units.dev.build-src.jar">
      <fileset dir="${mbeddr.build}/solutions/com.mbeddr.ext.units.dev.build/source_gen" includes="**/*.java" />
      <zipfileset file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.ext.units.dev.build/com.mbeddr.ext.units.dev.build.msd" prefix="module" />
      <zipfileset dir="${build.tmp}/customProcessors/copyModels/solutions-com.mbeddr.ext.units.dev.build-models" prefix="module/models" />
    </jar>
    <mkdir dir="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.ext.statemachinesInComponents.dev.build.jar" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.ext.statemachinesInComponents.dev.build.jar/META-INF" />
    <echoxml file="${build.tmp}/default/com.mbeddr.ext.statemachinesInComponents.dev.build.jar/META-INF/module.xml">
      <module namespace="com.mbeddr.ext.statemachinesInComponents.dev.build" type="solution" uuid="3cecacea-bd21-4633-bae9-d9c2c78f831d">
        <dependencies />
        <sources jar="com.mbeddr.ext.statemachinesInComponents.dev.build-src.jar" descriptor="com.mbeddr.ext.statemachinesInComponents.dev.build.msd" />
      </module>
    </echoxml>
    <jar destfile="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages/com.mbeddr.ext.statemachinesInComponents.dev.build.jar">
      <fileset dir="${build.tmp}/java/out/com.mbeddr.ext.statemachinesInComponents.dev.build" />
      <fileset dir="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.ext.statemachinesInComponents.dev.build" includes="icons/**, resources/**" />
      <fileset dir="${build.tmp}/default/com.mbeddr.ext.statemachinesInComponents.dev.build.jar" />
    </jar>
    <copyModels todir="${build.tmp}/customProcessors/copyModels/solutions-com.mbeddr.ext.statemachinesInComponents.dev.build-models">
      <fileset dir="${mbeddr.build}/solutions/com.mbeddr.ext.statemachinesInComponents.dev.build/models" includes="**/*.mps, **/*.metadata, **/*.history, **/*.mpsr, **/.model" />
    </copyModels>
    <jar destfile="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages/com.mbeddr.ext.statemachinesInComponents.dev.build-src.jar">
      <fileset dir="${mbeddr.build}/solutions/com.mbeddr.ext.statemachinesInComponents.dev.build/source_gen" includes="**/*.java" />
      <zipfileset file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.ext.statemachinesInComponents.dev.build/com.mbeddr.ext.statemachinesInComponents.dev.build.msd" prefix="module" />
      <zipfileset dir="${build.tmp}/customProcessors/copyModels/solutions-com.mbeddr.ext.statemachinesInComponents.dev.build-models" prefix="module/models" />
    </jar>
    <mkdir dir="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.ext.statemachine.dev.build.jar" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.ext.statemachine.dev.build.jar/META-INF" />
    <echoxml file="${build.tmp}/default/com.mbeddr.ext.statemachine.dev.build.jar/META-INF/module.xml">
      <module namespace="com.mbeddr.ext.statemachine.dev.build" type="solution" uuid="5bd95aa5-16b4-4bf5-89f7-cd01297e7f2d">
        <dependencies />
        <sources jar="com.mbeddr.ext.statemachine.dev.build-src.jar" descriptor="com.mbeddr.ext.statemachine.dev.build.msd" />
      </module>
    </echoxml>
    <jar destfile="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages/com.mbeddr.ext.statemachine.dev.build.jar">
      <fileset dir="${build.tmp}/java/out/com.mbeddr.ext.statemachine.dev.build" />
      <fileset dir="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.ext.statemachine.dev.build" includes="icons/**, resources/**" />
      <fileset dir="${build.tmp}/default/com.mbeddr.ext.statemachine.dev.build.jar" />
    </jar>
    <copyModels todir="${build.tmp}/customProcessors/copyModels/solutions-com.mbeddr.ext.statemachine.dev.build-models">
      <fileset dir="${mbeddr.build}/solutions/com.mbeddr.ext.statemachine.dev.build/models" includes="**/*.mps, **/*.metadata, **/*.history, **/*.mpsr, **/.model" />
    </copyModels>
    <jar destfile="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages/com.mbeddr.ext.statemachine.dev.build-src.jar">
      <fileset dir="${mbeddr.build}/solutions/com.mbeddr.ext.statemachine.dev.build/source_gen" includes="**/*.java" />
      <zipfileset file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.ext.statemachine.dev.build/com.mbeddr.ext.statemachine.dev.build.msd" prefix="module" />
      <zipfileset dir="${build.tmp}/customProcessors/copyModels/solutions-com.mbeddr.ext.statemachine.dev.build-models" prefix="module/models" />
    </jar>
    <mkdir dir="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.ext.components.dev.build.jar" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.ext.components.dev.build.jar/META-INF" />
    <echoxml file="${build.tmp}/default/com.mbeddr.ext.components.dev.build.jar/META-INF/module.xml">
      <module namespace="com.mbeddr.ext.components.dev.build" type="solution" uuid="8ea70440-eabe-4c88-95c7-cb0f5588827d">
        <dependencies />
        <sources jar="com.mbeddr.ext.components.dev.build-src.jar" descriptor="com.mbeddr.ext.components.dev.build.msd" />
      </module>
    </echoxml>
    <jar destfile="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages/com.mbeddr.ext.components.dev.build.jar">
      <fileset dir="${build.tmp}/java/out/com.mbeddr.ext.components.dev.build" />
      <fileset dir="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.ext.components.dev.build" includes="icons/**, resources/**" />
      <fileset dir="${build.tmp}/default/com.mbeddr.ext.components.dev.build.jar" />
    </jar>
    <copyModels todir="${build.tmp}/customProcessors/copyModels/solutions-com.mbeddr.ext.components.dev.build-models">
      <fileset dir="${mbeddr.build}/solutions/com.mbeddr.ext.components.dev.build/models" includes="**/*.mps, **/*.metadata, **/*.history, **/*.mpsr, **/.model" />
    </copyModels>
    <jar destfile="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages/com.mbeddr.ext.components.dev.build-src.jar">
      <fileset dir="${mbeddr.build}/solutions/com.mbeddr.ext.components.dev.build/source_gen" includes="**/*.java" />
      <zipfileset file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.ext.components.dev.build/com.mbeddr.ext.components.dev.build.msd" prefix="module" />
      <zipfileset dir="${build.tmp}/customProcessors/copyModels/solutions-com.mbeddr.ext.components.dev.build-models" prefix="module/models" />
    </jar>
    <mkdir dir="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.ext.tests.build.jar" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.ext.tests.build.jar/META-INF" />
    <echoxml file="${build.tmp}/default/com.mbeddr.ext.tests.build.jar/META-INF/module.xml">
      <module namespace="com.mbeddr.ext.tests.build" type="solution" uuid="06f4ccb3-313d-4d48-9667-87a8fb963fb2">
        <dependencies />
        <sources jar="com.mbeddr.ext.tests.build-src.jar" descriptor="build.msd" />
      </module>
    </echoxml>
    <jar destfile="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages/com.mbeddr.ext.tests.build.jar">
      <fileset dir="${build.tmp}/java/out/com.mbeddr.ext.tests.build" />
      <fileset dir="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.ext.build" includes="icons/**, resources/**" />
      <fileset dir="${build.tmp}/default/com.mbeddr.ext.tests.build.jar" />
    </jar>
    <copyModels todir="${build.tmp}/customProcessors/copyModels/solutions-com.mbeddr.ext.build-models">
      <fileset dir="${mbeddr.build}/solutions/com.mbeddr.ext.build/models" includes="**/*.mps, **/*.metadata, **/*.history, **/*.mpsr, **/.model" />
    </copyModels>
    <jar destfile="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages/com.mbeddr.ext.tests.build-src.jar">
      <fileset dir="${mbeddr.build}/solutions/com.mbeddr.ext.build/source_gen" includes="**/*.java" />
      <zipfileset file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.ext.build/build.msd" prefix="module" />
      <zipfileset dir="${build.tmp}/customProcessors/copyModels/solutions-com.mbeddr.ext.build-models" prefix="module/models" />
    </jar>
    <mkdir dir="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.analyses.cbmc.dev.build.jar" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.analyses.cbmc.dev.build.jar/META-INF" />
    <echoxml file="${build.tmp}/default/com.mbeddr.analyses.cbmc.dev.build.jar/META-INF/module.xml">
      <module namespace="com.mbeddr.analyses.cbmc.dev.build" type="solution" uuid="52533894-f4ff-41f6-8bcd-cc454916834d">
        <dependencies />
        <sources jar="com.mbeddr.analyses.cbmc.dev.build-src.jar" descriptor="com.mbeddr.analyses.cbmc.dev.build.msd" />
      </module>
    </echoxml>
    <jar destfile="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages/com.mbeddr.analyses.cbmc.dev.build.jar">
      <fileset dir="${build.tmp}/java/out/com.mbeddr.analyses.cbmc.dev.build" />
      <fileset dir="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.analyses.cbmc.dev.build" includes="icons/**, resources/**" />
      <fileset dir="${build.tmp}/default/com.mbeddr.analyses.cbmc.dev.build.jar" />
    </jar>
    <copyModels todir="${build.tmp}/customProcessors/copyModels/solutions-com.mbeddr.analyses.cbmc.dev.build-models">
      <fileset dir="${mbeddr.build}/solutions/com.mbeddr.analyses.cbmc.dev.build/models" includes="**/*.mps, **/*.metadata, **/*.history, **/*.mpsr, **/.model" />
    </copyModels>
    <jar destfile="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages/com.mbeddr.analyses.cbmc.dev.build-src.jar">
      <fileset dir="${mbeddr.build}/solutions/com.mbeddr.analyses.cbmc.dev.build/source_gen" includes="**/*.java" />
      <zipfileset file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.analyses.cbmc.dev.build/com.mbeddr.analyses.cbmc.dev.build.msd" prefix="module" />
      <zipfileset dir="${build.tmp}/customProcessors/copyModels/solutions-com.mbeddr.analyses.cbmc.dev.build-models" prefix="module/models" />
    </jar>
    <mkdir dir="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.analyses.base.dev.build.jar" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.analyses.base.dev.build.jar/META-INF" />
    <echoxml file="${build.tmp}/default/com.mbeddr.analyses.base.dev.build.jar/META-INF/module.xml">
      <module namespace="com.mbeddr.analyses.base.dev.build" type="solution" uuid="cfe2dde5-9e9a-4804-acb8-311b8adc09dc">
        <dependencies />
        <sources jar="com.mbeddr.analyses.base.dev.build-src.jar" descriptor="com.mbeddr.analyses.base.dev.build.msd" />
      </module>
    </echoxml>
    <jar destfile="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages/com.mbeddr.analyses.base.dev.build.jar">
      <fileset dir="${build.tmp}/java/out/com.mbeddr.analyses.base.dev.build" />
      <fileset dir="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.analyses.base.dev.build" includes="icons/**, resources/**" />
      <fileset dir="${build.tmp}/default/com.mbeddr.analyses.base.dev.build.jar" />
    </jar>
    <copyModels todir="${build.tmp}/customProcessors/copyModels/solutions-com.mbeddr.analyses.base.dev.build-models">
      <fileset dir="${mbeddr.build}/solutions/com.mbeddr.analyses.base.dev.build/models" includes="**/*.mps, **/*.metadata, **/*.history, **/*.mpsr, **/.model" />
    </copyModels>
    <jar destfile="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages/com.mbeddr.analyses.base.dev.build-src.jar">
      <fileset dir="${mbeddr.build}/solutions/com.mbeddr.analyses.base.dev.build/source_gen" includes="**/*.java" />
      <zipfileset file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.analyses.base.dev.build/com.mbeddr.analyses.base.dev.build.msd" prefix="module" />
      <zipfileset dir="${build.tmp}/customProcessors/copyModels/solutions-com.mbeddr.analyses.base.dev.build-models" prefix="module/models" />
    </jar>
    <mkdir dir="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.analyses.yices.dev.build.jar" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.analyses.yices.dev.build.jar/META-INF" />
    <echoxml file="${build.tmp}/default/com.mbeddr.analyses.yices.dev.build.jar/META-INF/module.xml">
      <module namespace="com.mbeddr.analyses.yices.dev.build" type="solution" uuid="f7dff26d-d965-400d-a73f-e89bdc87c05b">
        <dependencies />
        <sources jar="com.mbeddr.analyses.yices.dev.build-src.jar" descriptor="com.mbeddr.analyses.yices.dev.build.msd" />
      </module>
    </echoxml>
    <jar destfile="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages/com.mbeddr.analyses.yices.dev.build.jar">
      <fileset dir="${build.tmp}/java/out/com.mbeddr.analyses.yices.dev.build" />
      <fileset dir="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.analyses.yices.dev.build" includes="icons/**, resources/**" />
      <fileset dir="${build.tmp}/default/com.mbeddr.analyses.yices.dev.build.jar" />
    </jar>
    <copyModels todir="${build.tmp}/customProcessors/copyModels/solutions-com.mbeddr.analyses.yices.dev.build-models">
      <fileset dir="${mbeddr.build}/solutions/com.mbeddr.analyses.yices.dev.build/models" includes="**/*.mps, **/*.metadata, **/*.history, **/*.mpsr, **/.model" />
    </copyModels>
    <jar destfile="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages/com.mbeddr.analyses.yices.dev.build-src.jar">
      <fileset dir="${mbeddr.build}/solutions/com.mbeddr.analyses.yices.dev.build/source_gen" includes="**/*.java" />
      <zipfileset file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.analyses.yices.dev.build/com.mbeddr.analyses.yices.dev.build.msd" prefix="module" />
      <zipfileset dir="${build.tmp}/customProcessors/copyModels/solutions-com.mbeddr.analyses.yices.dev.build-models" prefix="module/models" />
    </jar>
    <mkdir dir="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.analyses.nusmv.dev.build.jar" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.analyses.nusmv.dev.build.jar/META-INF" />
    <echoxml file="${build.tmp}/default/com.mbeddr.analyses.nusmv.dev.build.jar/META-INF/module.xml">
      <module namespace="com.mbeddr.analyses.nusmv.dev.build" type="solution" uuid="e0d58430-60b1-4fb5-a47b-980926b70767">
        <dependencies />
        <sources jar="com.mbeddr.analyses.nusmv.dev.build-src.jar" descriptor="com.mbeddr.analyses.nusmv.dev.build.msd" />
      </module>
    </echoxml>
    <jar destfile="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages/com.mbeddr.analyses.nusmv.dev.build.jar">
      <fileset dir="${build.tmp}/java/out/com.mbeddr.analyses.nusmv.dev.build" />
      <fileset dir="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.analyses.nusmv.dev.build" includes="icons/**, resources/**" />
      <fileset dir="${build.tmp}/default/com.mbeddr.analyses.nusmv.dev.build.jar" />
    </jar>
    <copyModels todir="${build.tmp}/customProcessors/copyModels/solutions-com.mbeddr.analyses.nusmv.dev.build-models">
      <fileset dir="${mbeddr.build}/solutions/com.mbeddr.analyses.nusmv.dev.build/models" includes="**/*.mps, **/*.metadata, **/*.history, **/*.mpsr, **/.model" />
    </copyModels>
    <jar destfile="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages/com.mbeddr.analyses.nusmv.dev.build-src.jar">
      <fileset dir="${mbeddr.build}/solutions/com.mbeddr.analyses.nusmv.dev.build/source_gen" includes="**/*.java" />
      <zipfileset file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.analyses.nusmv.dev.build/com.mbeddr.analyses.nusmv.dev.build.msd" prefix="module" />
      <zipfileset dir="${build.tmp}/customProcessors/copyModels/solutions-com.mbeddr.analyses.nusmv.dev.build-models" prefix="module/models" />
    </jar>
    <mkdir dir="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.analyses.tests.dev.build.jar" />
    <mkdir dir="${build.tmp}/default/com.mbeddr.analyses.tests.dev.build.jar/META-INF" />
    <echoxml file="${build.tmp}/default/com.mbeddr.analyses.tests.dev.build.jar/META-INF/module.xml">
      <module namespace="com.mbeddr.analyses.tests.dev.build" type="solution" uuid="4c28f257-18f6-416e-b37b-fa69eba1866b">
        <dependencies />
        <sources jar="com.mbeddr.analyses.tests.dev.build-src.jar" descriptor="build.msd" />
      </module>
    </echoxml>
    <jar destfile="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages/com.mbeddr.analyses.tests.dev.build.jar">
      <fileset dir="${build.tmp}/java/out/com.mbeddr.analyses.tests.dev.build" />
      <fileset dir="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.analyses.dev.build" includes="icons/**, resources/**" />
      <fileset dir="${build.tmp}/default/com.mbeddr.analyses.tests.dev.build.jar" />
    </jar>
    <copyModels todir="${build.tmp}/customProcessors/copyModels/solutions-com.mbeddr.analyses.dev.build-models">
      <fileset dir="${mbeddr.build}/solutions/com.mbeddr.analyses.dev.build/models" includes="**/*.mps, **/*.metadata, **/*.history, **/*.mpsr, **/.model" />
    </copyModels>
    <jar destfile="${build.tmp}/default/com.mbeddr.allScripts.zip/mbeddr.allScripts/languages/com.mbeddr.analyses.tests.dev.build-src.jar">
      <fileset dir="${mbeddr.build}/solutions/com.mbeddr.analyses.dev.build/source_gen" includes="**/*.java" />
      <zipfileset file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.analyses.dev.build/build.msd" prefix="module" />
      <zipfileset dir="${build.tmp}/customProcessors/copyModels/solutions-com.mbeddr.analyses.dev.build-models" prefix="module/models" />
    </jar>
    <zip destfile="${build.layout}/com.mbeddr.allScripts.zip">
      <fileset dir="${build.tmp}/default/com.mbeddr.allScripts.zip" />
    </zip>
    <echo file="${build.layout}/build.properties">mps.build.number=${mps.build.number}${line.separator}mps.date=${mps.date}${line.separator}mps.build.vcs.number=${mps.build.vcs.number}${line.separator}mps.teamcity.buildConfName=${mps.teamcity.buildConfName}${line.separator}mps.idea.platform.build.number=${mps.idea.platform.build.number}${line.separator}mpsBootstrapCore.version=${mpsBootstrapCore.version}</echo>
  </target>
  
  <target name="buildDependents" />
  
  <target name="fetchDependencies">
    <mkdir dir="${build.tmp}/deps/mps-tables/mps-tables.zip" />
    <unzip src="${artifacts.mps-tables}/mps-tables.zip" dest="${build.tmp}/deps/mps-tables/mps-tables.zip" />
    <mkdir dir="${build.tmp}/deps/mps-multiline/mps-multiline.zip" />
    <unzip src="${artifacts.mps-multiline}/mps-multiline.zip" dest="${build.tmp}/deps/mps-multiline/mps-multiline.zip" />
    <mkdir dir="${build.tmp}/deps/mps-richtext/mps-richtext.zip" />
    <unzip src="${artifacts.mps-richtext}/mps-richtext.zip" dest="${build.tmp}/deps/mps-richtext/mps-richtext.zip" />
  </target>
  
  <target name="build" depends="assemble" />
  
  <target name="clean">
    <delete dir="${build.tmp}" />
    <delete dir="${build.layout}" />
  </target>
  
  <target name="compileJava" depends="java.compile.com.mbeddr.tutorial.dev.build, java.compile.com.mbeddr.allInOne, java.compile.com.mbeddr.spawner.dev.build, java.compile.com.mbeddr.mpsutil.dev.build, java.compile.com.mbeddr.mpsutil.buildutil, java.compile.com.mbeddr.mpsutil.buildutil#6600513366548883903, java.compile.com.mbeddr.mpsutil.blutil, java.compile.com.mbeddr.mpsutil.blutil#374287044672169667, java.compile.com.mbeddr.mpsutil.blutil.rt, java.compile.com.mbeddr.platform.dev.build, java.compile.com.mbeddr.debugger.dev.build, java.compile.com.mbeddr.core.dev.build, java.compile.com.mbeddr.core.tests.build, java.compile.com.mbeddr.debugger.tests.dev.build, java.compile.com.mbeddr.debugger.testing.build.dev.build, java.compile.com.mbeddr.cc.tests.dev.build, java.compile.com.mbeddr.cc.ple.dev.build, java.compile.com.mbeddr.cc.req.dev.build, java.compile.com.mbeddr.doc.dev.build, java.compile.com.mbeddr.ext.units.dev.build, java.compile.com.mbeddr.ext.statemachinesInComponents.dev.build, java.compile.com.mbeddr.ext.statemachine.dev.build, java.compile.com.mbeddr.ext.components.dev.build, java.compile.com.mbeddr.ext.tests.build, java.compile.com.mbeddr.analyses.cbmc.dev.build, java.compile.com.mbeddr.analyses.base.dev.build, java.compile.com.mbeddr.analyses.yices.dev.build, java.compile.com.mbeddr.analyses.nusmv.dev.build, java.compile.com.mbeddr.analyses.tests.dev.build" />
  
  <target name="processResources" />
  
  <target name="classes" depends="compileJava, processResources" />
  
  <target name="test" depends="classes" />
  
  <target name="check" depends="test" />
  
  <target name="generate" depends="declare-mps-tasks, fetchDependencies">
    <echo message="generating" />
    <generate strictMode="true" parallelMode="true" parallelThreads="16" useInplaceTransform="true" fork="true">
      <plugin path="${artifacts.mps}/plugins/mps-build" />
      <plugin path="${artifacts.mps}/plugins/mps-core/META-INF/plugin.xml/../.." />
      <plugin path="${artifacts.mps}/plugins/mps-debugger-api" />
      <plugin path="${artifacts.mps}/plugins/mps-debugger-java" />
      <plugin path="${artifacts.mps}/plugins/mps-execution-api" />
      <plugin path="${artifacts.mps}/plugins/mps-execution-languages" />
      <plugin path="${artifacts.mps}/plugins/mps-testing" />
      <plugin path="${build.tmp}/deps/mps-multiline/mps-multiline.zip/mps-multiline" />
      <plugin path="${build.tmp}/deps/mps-richtext/mps-richtext.zip/mps-richtext" />
      <plugin path="${build.tmp}/deps/mps-tables/mps-tables.zip/mps-tables" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.blTypes.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.checkedDots.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.classifiers.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.closures.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.collections.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.extensionMethods.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.javadoc.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.jdk7.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.logging.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.logging.runtime.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.regexp.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.regexp.runtime.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.scopes.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.tuples.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.unitTest.libs/jetbrains.mps.baseLanguage.unitTest.libs.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguageInternal.jar" />
      <library file="${artifacts.mps}/languages/devkits/jetbrains.mps.devkit.bootstrap-languages.devkit" />
      <library file="${artifacts.mps}/languages/devkits/jetbrains.mps.devkit.general-purpose.devkit" />
      <library file="${artifacts.mps}/languages/devkits/jetbrains.mps.devkit.language-design.devkit" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.access.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.actions.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.behavior.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.checkedName.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.constraints.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.core.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.dataFlow.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.descriptor.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.editor.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.findUsages.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.generator.generationContext.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.generator.generationParameters.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.generator.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.intentions.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.pattern.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.plugin.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.project.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.quotation.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.refactoring.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.resources.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.scopes.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.scopes.runtime.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.script.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.sharedConcepts.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.smodel.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.structure.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.stubs.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.textGen.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.traceable.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.typesystem.jar" />
      <library file="${artifacts.mps}/languages/make/jetbrains.mps.make.reduced.jar" />
      <library file="${artifacts.mps}/languages/make/jetbrains.mps.tool.gentest.jar" />
      <library file="${artifacts.mps}/languages/util/jetbrains.mps.execution.util.jar" />
      <library file="${artifacts.mps}/languages/workbench/jetbrains.mps.lang.plugin.standalone.jar" />
      <library file="${artifacts.mps}/languages/xml/jetbrains.mps.core.xml.jar" />
      <library file="${artifacts.mps}/lib/mps-closures.jar" />
      <library file="${artifacts.mps}/lib/mps-collections.jar" />
      <library file="${artifacts.mps}/lib/mps-core.jar" />
      <library file="${artifacts.mps}/lib/mps-editor.jar" />
      <library file="${artifacts.mps}/lib/mps-openapi.jar" />
      <library file="${artifacts.mps}/lib/mps-platform.jar" />
      <library file="${artifacts.mps}/lib/mps-test.jar" />
      <library file="${artifacts.mps}/lib/mps-tool.jar" />
      <library file="${artifacts.mps}/lib/mps-tuples.jar" />
      <library file="${artifacts.mps}/lib/mps-workbench.jar" />
      <library file="${artifacts.mps}/plugins/mps-build/languages/build/jetbrains.mps.build.jar" />
      <library file="${artifacts.mps}/plugins/mps-build/languages/build/jetbrains.mps.build.mps.jar" />
      <library file="${artifacts.mps}/plugins/mps-build/languages/build/jetbrains.mps.build.mps.tests.jar" />
      <library file="${artifacts.mps}/plugins/mps-build/languages/build/jetbrains.mps.build.workflow.jar" />
      <library file="${artifacts.mps}/plugins/mps-build/languages/build/jetbrains.mps.ide.build.jar" />
      <library file="${artifacts.mps}/plugins/mps-build/pluginSolutions/jetbrains.mps.build.mps.pluginSolution.jar" />
      <library file="${artifacts.mps}/plugins/mps-core/languages/util/jetbrains.mps.core.properties.jar" />
      <library file="${artifacts.mps}/plugins/mps-debugger-api/languages/mps-debugger-api/jetbrains.mps.debugger.api.lang.jar" />
      <library file="${artifacts.mps}/plugins/mps-debugger-api/lib/debugger-api.jar" />
      <library file="${artifacts.mps}/plugins/mps-debugger-java/languages/mps-debugger-java/jetbrains.mps.debugger.java.evaluation.jar" />
      <library file="${artifacts.mps}/plugins/mps-debugger-java/languages/mps-debugger-java/jetbrains.mps.debugger.java.privateMembers.jar" />
      <library file="${artifacts.mps}/plugins/mps-debugger-java/lib/debugger-java.jar" />
      <library file="${artifacts.mps}/plugins/mps-execution-api/languages/mps-execution-api/jetbrains.mps.execution.common.jar" />
      <library file="${artifacts.mps}/plugins/mps-execution-api/languages/mps-execution-api/jetbrains.mps.execution.settings.jar" />
      <library file="${artifacts.mps}/plugins/mps-execution-api/lib/execution-api.jar" />
      <library file="${artifacts.mps}/plugins/mps-execution-configurations/languages/mps-execution-configurations/jetbrains.mps.baseLanguage.execution.startup.jar" />
      <library file="${artifacts.mps}/plugins/mps-execution-configurations/languages/mps-execution-configurations/jetbrains.mps.baseLanguage.unitTest.execution.startup.jar" />
      <library file="${artifacts.mps}/plugins/mps-execution-configurations/lib/execution-configurations.jar" />
      <library file="${artifacts.mps}/plugins/mps-execution-languages/languages/mps-execution-languages/jetbrains.mps.execution.commands.jar" />
      <library file="${artifacts.mps}/plugins/mps-execution-languages/languages/mps-execution-languages/jetbrains.mps.execution.configurations.jar" />
      <library file="${artifacts.mps}/plugins/mps-execution-languages/languages/mps-execution-languages/jetbrains.mps.execution.configurations.pluginSolution.jar" />
      <library file="${artifacts.mps}/plugins/mps-execution-languages/lib/execution-languages.jar" />
      <library file="${artifacts.mps}/plugins/mps-testing/languages/baseLanguage/jetbrains.mps.baseLanguage.unitTest.jar" />
      <library file="${artifacts.mps}/plugins/mps-testing/languages/languageDesign/jetbrains.mps.lang.test.jar" />
      <library file="${artifacts.mps}/plugins/mps-testing/languages/languageDesign/jetbrains.mps.lang.test.runtime.jar" />
      <library file="${build.tmp}/deps/mps-multiline/mps-multiline.zip/mps-multiline/languages/mps-multiline/de.slisson.mps.editor.multiline.runtime.jar" />
      <library file="${build.tmp}/deps/mps-multiline/mps-multiline.zip/mps-multiline/languages/mps-multiline/mps-multiline.build.jar" />
      <library file="${build.tmp}/deps/mps-richtext/mps-richtext.zip/mps-richtext/languages/mps-richtext/de.slisson.mps.richtext.build.jar" />
      <library file="${build.tmp}/deps/mps-richtext/mps-richtext.zip/mps-richtext/languages/mps-richtext/de.slisson.mps.richtext.customcell.jar" />
      <library file="${build.tmp}/deps/mps-richtext/mps-richtext.zip/mps-richtext/languages/mps-richtext/de.slisson.mps.richtext.jar" />
      <library file="${build.tmp}/deps/mps-tables/mps-tables.zip/mps-tables/languages/mps-tables/de.slisson.mps.tables.build.jar" />
      <chunk>
        <module file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.debugger.dev.build/debugger.msd" />
        <module file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.debugger.tests.dev.build/com.mbeddr.debugger.tests.dev.build.msd" />
        <module file="${mbeddr.github.core.home}/code/languages/com.mbeddr.mpsutil/languages/com.mbeddr.mpsutil.blutil/blutil.mpl" />
        <module file="${mbeddr.github.core.home}/code/languages/com.mbeddr.mpsutil/languages/com.mbeddr.mpsutil.blutil/solutions/com.mbeddr.mpsutil.blutil.rt.msd" />
        <module file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.spawner.dev.build/debugger.msd" />
      </chunk>
      <chunk>
        <module file="${mbeddr.github.core.home}/code/languages/com.mbeddr.mpsutil/languages/com.mbeddr.mpsutil.buildutil/com.mbeddr.mpsutil.buildutil.mpl" />
      </chunk>
      <chunk>
        <module file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.allInOne/allInOne.msd" />
        <module file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.analyses.base.dev.build/com.mbeddr.analyses.base.dev.build.msd" />
        <module file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.analyses.cbmc.dev.build/com.mbeddr.analyses.cbmc.dev.build.msd" />
        <module file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.analyses.nusmv.dev.build/com.mbeddr.analyses.nusmv.dev.build.msd" />
        <module file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.analyses.dev.build/build.msd" />
        <module file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.analyses.yices.dev.build/com.mbeddr.analyses.yices.dev.build.msd" />
        <module file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.cc.ple.dev.build/com.mbeddr.cc.ple.dev.build.msd" />
        <module file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.cc.dev.build/build.msd" />
        <module file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.cc.tests.dev.build/com.mbeddr.cc.tests.dev.build.msd" />
        <module file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.core.dev.build/build.msd" />
        <module file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.core.tests.build/com.mbeddr.core.tests.build.msd" />
        <module file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.debugger-test.build.dev.build/com.mbeddr.debugger-test.build.dev.build.msd" />
        <module file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.doc.dev.build/com.mbeddr.doc.dev.build.msd" />
        <module file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.ext.components.dev.build/com.mbeddr.ext.components.dev.build.msd" />
        <module file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.ext.statemachine.dev.build/com.mbeddr.ext.statemachine.dev.build.msd" />
        <module file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.ext.statemachinesInComponents.dev.build/com.mbeddr.ext.statemachinesInComponents.dev.build.msd" />
        <module file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.ext.build/build.msd" />
        <module file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.ext.units.dev.build/com.mbeddr.ext.units.dev.build.msd" />
        <module file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.mpsutil.dev.build/build.msd" />
        <module file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.platform.dev.build/com.mbeddr.platform.dev.build.msd" />
        <module file="${mbeddr.github.core.home}/code/languages/com.mbeddr.build/solutions/com.mbeddr.build.build/com.mbeddr.build.build.msd" />
      </chunk>
      <jvmargs>
        <arg value="-Xmx512m" />
      </jvmargs>
      <macro name="mps.home" path="${mps.home}" />
      <macro name="mbeddr.github.core.home" path="${mbeddr.github.core.home}" />
      <macro name="mbeddr.build" path="${mbeddr.build}" />
      <macro name="lisson.home" path="${lisson.home}" />
      <macro name="multiline.artifacts" path="${multiline.artifacts}" />
      <macro name="tables.artifacts" path="${tables.artifacts}" />
      <macro name="richtext.artifacts" path="${richtext.artifacts}" />
      <macro name="spawner.artifacts" path="${spawner.artifacts}" />
    </generate>
  </target>
  
  <target name="declare-mps-tasks">
    <taskdef resource="jetbrains/mps/build/ant/antlib.xml" classpathref="path.mps.ant.path" />
  </target>
  
  <target name="makeDependents" />
  
  <target name="java.compile.com.mbeddr.tutorial.dev.build" depends="java.compile.com.mbeddr.analyses.base.dev.build, java.compile.com.mbeddr.analyses.cbmc.dev.build, java.compile.com.mbeddr.analyses.nusmv.dev.build, java.compile.com.mbeddr.analyses.tests.dev.build, java.compile.com.mbeddr.analyses.yices.dev.build, java.compile.com.mbeddr.cc.ple.dev.build, java.compile.com.mbeddr.cc.req.dev.build, java.compile.com.mbeddr.core.dev.build, java.compile.com.mbeddr.debugger.dev.build, java.compile.com.mbeddr.doc.dev.build, java.compile.com.mbeddr.ext.components.dev.build, java.compile.com.mbeddr.ext.statemachine.dev.build, java.compile.com.mbeddr.ext.tests.build, java.compile.com.mbeddr.ext.units.dev.build, java.compile.com.mbeddr.mpsutil.dev.build, java.compile.com.mbeddr.platform.dev.build, java.compile.com.mbeddr.spawner.dev.build, fetchDependencies">
    <mkdir dir="${mbeddr.build}/solutions/com.mbeddr.build.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.mbeddr.tutorial.dev.build" />
    <javac destdir="${build.tmp}/java/out/com.mbeddr.tutorial.dev.build" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${mbeddr.build}/solutions/com.mbeddr.build.build/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/com.mbeddr.analyses.base.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.analyses.cbmc.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.analyses.nusmv.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.analyses.tests.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.analyses.yices.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.cc.ple.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.cc.req.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.core.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.debugger.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.doc.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.components.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.statemachine.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.tests.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.units.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.mpsutil.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.platform.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.spawner.dev.build" />
        <fileset file="${artifacts.mps}/plugins/mps-execution-api/lib/execution-api.jar" />
        <fileset file="${artifacts.mps}/lib/mps-openapi.jar" />
        <fileset file="${artifacts.mps}/lib/mps-closures.jar" />
        <fileset file="${artifacts.mps}/lib/mps-collections.jar" />
        <fileset file="${artifacts.mps}/lib/mps-tuples.jar" />
        <fileset file="${artifacts.mps}/lib/mps-core.jar" />
        <fileset file="${artifacts.mps}/lib/mps-platform.jar" />
        <fileset file="${artifacts.mps}/lib/mps-editor-api.jar" />
        <fileset file="${artifacts.mps}/lib/mps-editor-runtime.jar" />
        <fileset file="${artifacts.mps}/lib/mps-editor.jar" />
        <fileset file="${artifacts.mps}/lib/mps-icons.jar" />
        <fileset file="${artifacts.mps}/lib/mps-workbench.jar" />
        <fileset file="${artifacts.mps}/plugins/mps-debugger-api/lib/debugger-api.jar" />
        <fileset file="${artifacts.mps}/lib/annotations.jar" />
        <fileset file="${artifacts.mps}/lib/jdom.jar" />
        <fileset file="${artifacts.mps}/lib/log4j.jar" />
        <fileset file="${artifacts.mps}/lib/ecj-4.2.1.jar" />
        <fileset file="${artifacts.mps}/lib/trove4j.jar" />
        <fileset file="${artifacts.mps}/lib/xstream-1.4.3.jar" />
        <fileset file="${artifacts.mps}/lib/asm4-all.jar" />
        <fileset file="${artifacts.mps}/lib/diffutils-1.2.1.jar" />
        <fileset dir="${artifacts.mps}/lib" includes="*.jar" />
        <fileset file="${build.tmp}/deps/mps-richtext/mps-richtext.zip/mps-richtext/languages/mps-richtext/de.slisson.mps.richtext.build.jar" />
        <fileset file="${build.tmp}/deps/mps-tables/mps-tables.zip/mps-tables/languages/mps-tables/de.slisson.mps.tables.build.jar" />
        <fileset file="${build.tmp}/deps/mps-multiline/mps-multiline.zip/mps-multiline/languages/mps-multiline/mps-multiline.build.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.com.mbeddr.allInOne" depends="java.compile.com.mbeddr.analyses.base.dev.build, java.compile.com.mbeddr.analyses.cbmc.dev.build, java.compile.com.mbeddr.analyses.nusmv.dev.build, java.compile.com.mbeddr.analyses.tests.dev.build, java.compile.com.mbeddr.analyses.yices.dev.build, java.compile.com.mbeddr.cc.ple.dev.build, java.compile.com.mbeddr.cc.req.dev.build, java.compile.com.mbeddr.core.dev.build, java.compile.com.mbeddr.debugger.dev.build, java.compile.com.mbeddr.doc.dev.build, java.compile.com.mbeddr.ext.components.dev.build, java.compile.com.mbeddr.ext.statemachine.dev.build, java.compile.com.mbeddr.ext.statemachinesInComponents.dev.build, java.compile.com.mbeddr.ext.tests.build, java.compile.com.mbeddr.ext.units.dev.build, java.compile.com.mbeddr.mpsutil.dev.build, java.compile.com.mbeddr.platform.dev.build, java.compile.com.mbeddr.spawner.dev.build, fetchDependencies">
    <mkdir dir="${mbeddr.build}/solutions/com.mbeddr.allInOne/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.mbeddr.allInOne" />
    <javac destdir="${build.tmp}/java/out/com.mbeddr.allInOne" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${mbeddr.build}/solutions/com.mbeddr.allInOne/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/com.mbeddr.analyses.base.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.analyses.cbmc.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.analyses.nusmv.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.analyses.tests.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.analyses.yices.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.cc.ple.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.cc.req.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.core.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.debugger.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.doc.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.components.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.statemachine.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.statemachinesInComponents.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.tests.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.units.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.mpsutil.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.platform.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.spawner.dev.build" />
        <fileset file="${build.tmp}/deps/mps-richtext/mps-richtext.zip/mps-richtext/languages/mps-richtext/de.slisson.mps.richtext.build.jar" />
        <fileset file="${build.tmp}/deps/mps-tables/mps-tables.zip/mps-tables/languages/mps-tables/de.slisson.mps.tables.build.jar" />
        <fileset file="${build.tmp}/deps/mps-multiline/mps-multiline.zip/mps-multiline/languages/mps-multiline/mps-multiline.build.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.com.mbeddr.spawner.dev.build">
    <mkdir dir="${mbeddr.build}/solutions/com.mbeddr.spawner.dev.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.mbeddr.spawner.dev.build" />
    <javac destdir="${build.tmp}/java/out/com.mbeddr.spawner.dev.build" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${mbeddr.build}/solutions/com.mbeddr.spawner.dev.build/source_gen" />
      </src>
      <classpath />
    </javac>
  </target>
  
  <target name="java.compile.com.mbeddr.mpsutil.dev.build" depends="fetchDependencies">
    <mkdir dir="${mbeddr.build}/solutions/com.mbeddr.mpsutil.dev.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.mbeddr.mpsutil.dev.build" />
    <javac destdir="${build.tmp}/java/out/com.mbeddr.mpsutil.dev.build" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${mbeddr.build}/solutions/com.mbeddr.mpsutil.dev.build/source_gen" />
      </src>
      <classpath>
        <fileset file="${build.tmp}/deps/mps-richtext/mps-richtext.zip/mps-richtext/languages/mps-richtext/de.slisson.mps.richtext.build.jar" />
        <fileset file="${build.tmp}/deps/mps-multiline/mps-multiline.zip/mps-multiline/languages/mps-multiline/mps-multiline.build.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.com.mbeddr.mpsutil.buildutil" depends="java.compile.com.mbeddr.mpsutil.blutil.rt, fetchDependencies">
    <mkdir dir="${mbeddr.github.core.home}/code/languages/com.mbeddr.mpsutil/languages/com.mbeddr.mpsutil.buildutil/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.mbeddr.mpsutil.buildutil" />
    <javac destdir="${build.tmp}/java/out/com.mbeddr.mpsutil.buildutil" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${mbeddr.github.core.home}/code/languages/com.mbeddr.mpsutil/languages/com.mbeddr.mpsutil.buildutil/source_gen" />
      </src>
      <classpath>
        <fileset file="${artifacts.mps}/lib/mps-openapi.jar" />
        <fileset file="${artifacts.mps}/lib/mps-closures.jar" />
        <fileset file="${artifacts.mps}/lib/mps-collections.jar" />
        <fileset file="${artifacts.mps}/lib/mps-tuples.jar" />
        <fileset file="${artifacts.mps}/lib/mps-core.jar" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.mpsutil.blutil.rt" />
        <fileset file="${artifacts.mps}/lib/mps-editor-api.jar" />
        <fileset file="${artifacts.mps}/lib/mps-editor-runtime.jar" />
        <fileset file="${artifacts.mps}/lib/mps-editor.jar" />
        <fileset file="${artifacts.mps}/lib/mps-platform.jar" />
        <fileset file="${artifacts.mps}/lib/annotations.jar" />
        <fileset file="${artifacts.mps}/lib/log4j.jar" />
        <fileset file="${artifacts.mps}/lib/jdom.jar" />
        <fileset file="${artifacts.mps}/lib/ecj-4.2.1.jar" />
        <fileset file="${artifacts.mps}/lib/trove4j.jar" />
        <fileset file="${artifacts.mps}/lib/xstream-1.4.3.jar" />
        <fileset file="${artifacts.mps}/lib/asm4-all.jar" />
        <fileset file="${artifacts.mps}/lib/diffutils-1.2.1.jar" />
        <fileset dir="${artifacts.mps}/lib" includes="*.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.blTypes.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.closures.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.collections.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.jdk7.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.scopes.jar" />
        <fileset file="${artifacts.mps}/plugins/mps-build/languages/build/jetbrains.mps.build.jar" />
        <fileset file="${artifacts.mps}/plugins/mps-build/languages/build/jetbrains.mps.build.mps.jar" />
        <fileset file="${artifacts.mps}/plugins/mps-build/pluginSolutions/jetbrains.mps.build.mps.pluginSolution.jar" />
        <fileset file="${artifacts.mps}/plugins/mps-build/languages/build/jetbrains.mps.build.workflow.jar" />
        <fileset file="${artifacts.mps}/plugins/mps-core/languages/util/jetbrains.mps.core.properties.jar" />
        <fileset file="${artifacts.mps}/languages/xml/jetbrains.mps.core.xml.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.core.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.structure.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.traceable.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.com.mbeddr.mpsutil.buildutil#6600513366548883903" depends="java.compile.com.mbeddr.mpsutil.buildutil, fetchDependencies">
    <mkdir dir="${mbeddr.github.core.home}/code/languages/com.mbeddr.mpsutil/languages/com.mbeddr.mpsutil.buildutil/generator/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.mbeddr.mpsutil.buildutil#6600513366548883903" />
    <javac destdir="${build.tmp}/java/out/com.mbeddr.mpsutil.buildutil#6600513366548883903" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${mbeddr.github.core.home}/code/languages/com.mbeddr.mpsutil/languages/com.mbeddr.mpsutil.buildutil/generator/source_gen" />
      </src>
      <classpath>
        <fileset file="${artifacts.mps}/lib/mps-openapi.jar" />
        <fileset file="${artifacts.mps}/lib/mps-closures.jar" />
        <fileset file="${artifacts.mps}/lib/mps-collections.jar" />
        <fileset file="${artifacts.mps}/lib/mps-tuples.jar" />
        <fileset file="${artifacts.mps}/lib/mps-core.jar" />
        <fileset file="${artifacts.mps}/lib/mps-editor-api.jar" />
        <fileset file="${artifacts.mps}/lib/mps-editor-runtime.jar" />
        <fileset file="${artifacts.mps}/lib/mps-editor.jar" />
        <fileset file="${artifacts.mps}/lib/mps-platform.jar" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.mpsutil.buildutil" />
        <fileset file="${artifacts.mps}/lib/annotations.jar" />
        <fileset file="${artifacts.mps}/lib/log4j.jar" />
        <fileset file="${artifacts.mps}/lib/jdom.jar" />
        <fileset file="${artifacts.mps}/lib/ecj-4.2.1.jar" />
        <fileset file="${artifacts.mps}/lib/trove4j.jar" />
        <fileset file="${artifacts.mps}/lib/xstream-1.4.3.jar" />
        <fileset file="${artifacts.mps}/lib/asm4-all.jar" />
        <fileset file="${artifacts.mps}/lib/diffutils-1.2.1.jar" />
        <fileset dir="${artifacts.mps}/lib" includes="*.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.blTypes.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.closures.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.collections.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.jdk7.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.scopes.jar" />
        <fileset file="${artifacts.mps}/plugins/mps-build/languages/build/jetbrains.mps.build.jar" />
        <fileset file="${artifacts.mps}/plugins/mps-build/languages/build/jetbrains.mps.build.mps.jar" />
        <fileset file="${artifacts.mps}/plugins/mps-build/languages/build/jetbrains.mps.build.workflow.jar" />
        <fileset file="${artifacts.mps}/plugins/mps-core/languages/util/jetbrains.mps.core.properties.jar" />
        <fileset file="${artifacts.mps}/languages/xml/jetbrains.mps.core.xml.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.core.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.structure.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.traceable.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.com.mbeddr.mpsutil.blutil" depends="fetchDependencies">
    <mkdir dir="${mbeddr.github.core.home}/code/languages/com.mbeddr.mpsutil/languages/com.mbeddr.mpsutil.blutil/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.mbeddr.mpsutil.blutil" />
    <javac destdir="${build.tmp}/java/out/com.mbeddr.mpsutil.blutil" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${mbeddr.github.core.home}/code/languages/com.mbeddr.mpsutil/languages/com.mbeddr.mpsutil.blutil/source_gen" />
      </src>
      <classpath>
        <fileset file="${artifacts.mps}/lib/mps-openapi.jar" />
        <fileset file="${artifacts.mps}/lib/mps-closures.jar" />
        <fileset file="${artifacts.mps}/lib/mps-collections.jar" />
        <fileset file="${artifacts.mps}/lib/mps-tuples.jar" />
        <fileset file="${artifacts.mps}/lib/mps-core.jar" />
        <fileset file="${artifacts.mps}/lib/mps-editor-api.jar" />
        <fileset file="${artifacts.mps}/lib/mps-editor-runtime.jar" />
        <fileset file="${artifacts.mps}/lib/mps-editor.jar" />
        <fileset file="${artifacts.mps}/lib/mps-platform.jar" />
        <fileset file="${artifacts.mps}/lib/annotations.jar" />
        <fileset file="${artifacts.mps}/lib/log4j.jar" />
        <fileset file="${artifacts.mps}/lib/jdom.jar" />
        <fileset file="${artifacts.mps}/lib/ecj-4.2.1.jar" />
        <fileset file="${artifacts.mps}/lib/trove4j.jar" />
        <fileset file="${artifacts.mps}/lib/xstream-1.4.3.jar" />
        <fileset file="${artifacts.mps}/lib/asm4-all.jar" />
        <fileset file="${artifacts.mps}/lib/diffutils-1.2.1.jar" />
        <fileset dir="${artifacts.mps}/lib" includes="*.jar" />
        <fileset file="${build.tmp}/deps/mps-richtext/mps-richtext.zip/mps-richtext/languages/mps-richtext/de.slisson.mps.richtext.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.blTypes.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.closures.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.collections.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.jdk7.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.logging.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.scopes.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.access.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.constraints.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.core.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.pattern.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.sharedConcepts.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.smodel.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.structure.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.traceable.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.typesystem.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.com.mbeddr.mpsutil.blutil#374287044672169667" depends="java.compile.com.mbeddr.mpsutil.blutil, fetchDependencies">
    <mkdir dir="${mbeddr.github.core.home}/code/languages/com.mbeddr.mpsutil/languages/com.mbeddr.mpsutil.blutil/generator/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.mbeddr.mpsutil.blutil#374287044672169667" />
    <javac destdir="${build.tmp}/java/out/com.mbeddr.mpsutil.blutil#374287044672169667" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${mbeddr.github.core.home}/code/languages/com.mbeddr.mpsutil/languages/com.mbeddr.mpsutil.blutil/generator/source_gen" />
      </src>
      <classpath>
        <fileset file="${artifacts.mps}/lib/mps-openapi.jar" />
        <fileset file="${artifacts.mps}/lib/mps-closures.jar" />
        <fileset file="${artifacts.mps}/lib/mps-collections.jar" />
        <fileset file="${artifacts.mps}/lib/mps-tuples.jar" />
        <fileset file="${artifacts.mps}/lib/mps-core.jar" />
        <fileset file="${artifacts.mps}/lib/mps-editor-api.jar" />
        <fileset file="${artifacts.mps}/lib/mps-editor-runtime.jar" />
        <fileset file="${artifacts.mps}/lib/mps-editor.jar" />
        <fileset file="${artifacts.mps}/lib/mps-platform.jar" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.mpsutil.blutil" />
        <fileset file="${artifacts.mps}/lib/annotations.jar" />
        <fileset file="${artifacts.mps}/lib/log4j.jar" />
        <fileset file="${artifacts.mps}/lib/jdom.jar" />
        <fileset file="${artifacts.mps}/lib/ecj-4.2.1.jar" />
        <fileset file="${artifacts.mps}/lib/trove4j.jar" />
        <fileset file="${artifacts.mps}/lib/xstream-1.4.3.jar" />
        <fileset file="${artifacts.mps}/lib/asm4-all.jar" />
        <fileset file="${artifacts.mps}/lib/diffutils-1.2.1.jar" />
        <fileset dir="${artifacts.mps}/lib" includes="*.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.blTypes.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.closures.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.collections.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.jdk7.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.logging.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.scopes.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.access.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.constraints.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.core.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.pattern.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.sharedConcepts.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.smodel.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.structure.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.traceable.jar" />
        <fileset file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.typesystem.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.com.mbeddr.mpsutil.blutil.rt" depends="fetchDependencies">
    <mkdir dir="${mbeddr.github.core.home}/code/languages/com.mbeddr.mpsutil/languages/com.mbeddr.mpsutil.blutil/solutions/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.mbeddr.mpsutil.blutil.rt" />
    <javac destdir="${build.tmp}/java/out/com.mbeddr.mpsutil.blutil.rt" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${mbeddr.github.core.home}/code/languages/com.mbeddr.mpsutil/languages/com.mbeddr.mpsutil.blutil/solutions/source_gen" />
      </src>
      <classpath>
        <fileset file="${artifacts.mps}/lib/mps-openapi.jar" />
        <fileset file="${artifacts.mps}/lib/mps-closures.jar" />
        <fileset file="${artifacts.mps}/lib/mps-collections.jar" />
        <fileset file="${artifacts.mps}/lib/mps-tuples.jar" />
        <fileset file="${artifacts.mps}/lib/mps-core.jar" />
        <fileset file="${artifacts.mps}/lib/annotations.jar" />
        <fileset file="${artifacts.mps}/lib/log4j.jar" />
        <fileset file="${artifacts.mps}/lib/jdom.jar" />
        <fileset file="${artifacts.mps}/lib/ecj-4.2.1.jar" />
        <fileset file="${artifacts.mps}/lib/trove4j.jar" />
        <fileset file="${artifacts.mps}/lib/xstream-1.4.3.jar" />
        <fileset file="${artifacts.mps}/lib/asm4-all.jar" />
        <fileset file="${artifacts.mps}/lib/diffutils-1.2.1.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.com.mbeddr.platform.dev.build" depends="java.compile.com.mbeddr.mpsutil.dev.build, fetchDependencies">
    <mkdir dir="${mbeddr.build}/solutions/com.mbeddr.platform.dev.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.mbeddr.platform.dev.build" />
    <javac destdir="${build.tmp}/java/out/com.mbeddr.platform.dev.build" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${mbeddr.build}/solutions/com.mbeddr.platform.dev.build/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/com.mbeddr.mpsutil.dev.build" />
        <fileset file="${build.tmp}/deps/mps-richtext/mps-richtext.zip/mps-richtext/languages/mps-richtext/de.slisson.mps.richtext.build.jar" />
        <fileset file="${build.tmp}/deps/mps-tables/mps-tables.zip/mps-tables/languages/mps-tables/de.slisson.mps.tables.build.jar" />
        <fileset file="${build.tmp}/deps/mps-multiline/mps-multiline.zip/mps-multiline/languages/mps-multiline/mps-multiline.build.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.com.mbeddr.debugger.dev.build" depends="java.compile.com.mbeddr.spawner.dev.build">
    <mkdir dir="${mbeddr.build}/solutions/com.mbeddr.debugger.dev.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.mbeddr.debugger.dev.build" />
    <javac destdir="${build.tmp}/java/out/com.mbeddr.debugger.dev.build" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${mbeddr.build}/solutions/com.mbeddr.debugger.dev.build/source_gen" />
      </src>
      <classpath path="${build.tmp}/java/out/com.mbeddr.spawner.dev.build" />
    </javac>
  </target>
  
  <target name="java.compile.com.mbeddr.core.dev.build" depends="java.compile.com.mbeddr.debugger.dev.build, java.compile.com.mbeddr.mpsutil.dev.build, java.compile.com.mbeddr.platform.dev.build, java.compile.com.mbeddr.spawner.dev.build, fetchDependencies">
    <mkdir dir="${mbeddr.build}/solutions/com.mbeddr.core.dev.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.mbeddr.core.dev.build" />
    <javac destdir="${build.tmp}/java/out/com.mbeddr.core.dev.build" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${mbeddr.build}/solutions/com.mbeddr.core.dev.build/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/com.mbeddr.debugger.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.mpsutil.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.platform.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.spawner.dev.build" />
        <fileset file="${build.tmp}/deps/mps-richtext/mps-richtext.zip/mps-richtext/languages/mps-richtext/de.slisson.mps.richtext.build.jar" />
        <fileset file="${build.tmp}/deps/mps-tables/mps-tables.zip/mps-tables/languages/mps-tables/de.slisson.mps.tables.build.jar" />
        <fileset file="${build.tmp}/deps/mps-multiline/mps-multiline.zip/mps-multiline/languages/mps-multiline/mps-multiline.build.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.com.mbeddr.core.tests.build" depends="java.compile.com.mbeddr.core.dev.build, java.compile.com.mbeddr.debugger.dev.build, java.compile.com.mbeddr.mpsutil.dev.build, java.compile.com.mbeddr.platform.dev.build, java.compile.com.mbeddr.spawner.dev.build, fetchDependencies">
    <mkdir dir="${mbeddr.build}/solutions/com.mbeddr.core.tests.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.mbeddr.core.tests.build" />
    <javac destdir="${build.tmp}/java/out/com.mbeddr.core.tests.build" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${mbeddr.build}/solutions/com.mbeddr.core.tests.build/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/com.mbeddr.core.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.debugger.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.mpsutil.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.platform.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.spawner.dev.build" />
        <fileset file="${build.tmp}/deps/mps-richtext/mps-richtext.zip/mps-richtext/languages/mps-richtext/de.slisson.mps.richtext.build.jar" />
        <fileset file="${build.tmp}/deps/mps-tables/mps-tables.zip/mps-tables/languages/mps-tables/de.slisson.mps.tables.build.jar" />
        <fileset file="${build.tmp}/deps/mps-multiline/mps-multiline.zip/mps-multiline/languages/mps-multiline/mps-multiline.build.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.com.mbeddr.debugger.tests.dev.build" depends="java.compile.com.mbeddr.debugger.dev.build, java.compile.com.mbeddr.spawner.dev.build">
    <mkdir dir="${mbeddr.build}/solutions/com.mbeddr.debugger.tests.dev.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.mbeddr.debugger.tests.dev.build" />
    <javac destdir="${build.tmp}/java/out/com.mbeddr.debugger.tests.dev.build" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${mbeddr.build}/solutions/com.mbeddr.debugger.tests.dev.build/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/com.mbeddr.debugger.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.spawner.dev.build" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.com.mbeddr.debugger.testing.build.dev.build" depends="java.compile.com.mbeddr.core.dev.build, java.compile.com.mbeddr.debugger.dev.build, java.compile.com.mbeddr.ext.components.dev.build, java.compile.com.mbeddr.ext.statemachine.dev.build, java.compile.com.mbeddr.ext.statemachinesInComponents.dev.build, java.compile.com.mbeddr.ext.tests.build, java.compile.com.mbeddr.ext.units.dev.build, java.compile.com.mbeddr.mpsutil.dev.build, java.compile.com.mbeddr.platform.dev.build, java.compile.com.mbeddr.spawner.dev.build, fetchDependencies">
    <mkdir dir="${mbeddr.build}/solutions/com.mbeddr.debugger-test.build.dev.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.mbeddr.debugger.testing.build.dev.build" />
    <javac destdir="${build.tmp}/java/out/com.mbeddr.debugger.testing.build.dev.build" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${mbeddr.build}/solutions/com.mbeddr.debugger-test.build.dev.build/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/com.mbeddr.core.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.debugger.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.components.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.statemachine.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.statemachinesInComponents.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.tests.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.units.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.mpsutil.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.platform.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.spawner.dev.build" />
        <fileset file="${build.tmp}/deps/mps-richtext/mps-richtext.zip/mps-richtext/languages/mps-richtext/de.slisson.mps.richtext.build.jar" />
        <fileset file="${build.tmp}/deps/mps-tables/mps-tables.zip/mps-tables/languages/mps-tables/de.slisson.mps.tables.build.jar" />
        <fileset file="${build.tmp}/deps/mps-multiline/mps-multiline.zip/mps-multiline/languages/mps-multiline/mps-multiline.build.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.com.mbeddr.cc.tests.dev.build" depends="java.compile.com.mbeddr.cc.ple.dev.build, java.compile.com.mbeddr.cc.req.dev.build, java.compile.com.mbeddr.core.dev.build, java.compile.com.mbeddr.debugger.dev.build, java.compile.com.mbeddr.doc.dev.build, java.compile.com.mbeddr.ext.components.dev.build, java.compile.com.mbeddr.ext.tests.build, java.compile.com.mbeddr.mpsutil.dev.build, java.compile.com.mbeddr.platform.dev.build, java.compile.com.mbeddr.spawner.dev.build, fetchDependencies">
    <mkdir dir="${mbeddr.build}/solutions/com.mbeddr.cc.tests.dev.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.mbeddr.cc.tests.dev.build" />
    <javac destdir="${build.tmp}/java/out/com.mbeddr.cc.tests.dev.build" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${mbeddr.build}/solutions/com.mbeddr.cc.tests.dev.build/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/com.mbeddr.cc.ple.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.cc.req.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.core.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.debugger.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.doc.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.components.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.tests.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.mpsutil.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.platform.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.spawner.dev.build" />
        <fileset file="${build.tmp}/deps/mps-richtext/mps-richtext.zip/mps-richtext/languages/mps-richtext/de.slisson.mps.richtext.build.jar" />
        <fileset file="${build.tmp}/deps/mps-tables/mps-tables.zip/mps-tables/languages/mps-tables/de.slisson.mps.tables.build.jar" />
        <fileset file="${build.tmp}/deps/mps-multiline/mps-multiline.zip/mps-multiline/languages/mps-multiline/mps-multiline.build.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.com.mbeddr.cc.ple.dev.build" depends="java.compile.com.mbeddr.core.dev.build, java.compile.com.mbeddr.debugger.dev.build, java.compile.com.mbeddr.ext.components.dev.build, java.compile.com.mbeddr.mpsutil.dev.build, java.compile.com.mbeddr.platform.dev.build, java.compile.com.mbeddr.spawner.dev.build, fetchDependencies">
    <mkdir dir="${mbeddr.build}/solutions/com.mbeddr.cc.ple.dev.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.mbeddr.cc.ple.dev.build" />
    <javac destdir="${build.tmp}/java/out/com.mbeddr.cc.ple.dev.build" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${mbeddr.build}/solutions/com.mbeddr.cc.ple.dev.build/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/com.mbeddr.core.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.debugger.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.components.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.mpsutil.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.platform.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.spawner.dev.build" />
        <fileset file="${build.tmp}/deps/mps-richtext/mps-richtext.zip/mps-richtext/languages/mps-richtext/de.slisson.mps.richtext.build.jar" />
        <fileset file="${build.tmp}/deps/mps-tables/mps-tables.zip/mps-tables/languages/mps-tables/de.slisson.mps.tables.build.jar" />
        <fileset file="${build.tmp}/deps/mps-multiline/mps-multiline.zip/mps-multiline/languages/mps-multiline/mps-multiline.build.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.com.mbeddr.cc.req.dev.build" depends="java.compile.com.mbeddr.cc.ple.dev.build, java.compile.com.mbeddr.core.dev.build, java.compile.com.mbeddr.debugger.dev.build, java.compile.com.mbeddr.doc.dev.build, java.compile.com.mbeddr.ext.components.dev.build, java.compile.com.mbeddr.mpsutil.dev.build, java.compile.com.mbeddr.platform.dev.build, java.compile.com.mbeddr.spawner.dev.build, fetchDependencies">
    <mkdir dir="${mbeddr.build}/solutions/com.mbeddr.cc.dev.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.mbeddr.cc.req.dev.build" />
    <javac destdir="${build.tmp}/java/out/com.mbeddr.cc.req.dev.build" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${mbeddr.build}/solutions/com.mbeddr.cc.dev.build/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/com.mbeddr.cc.ple.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.core.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.debugger.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.doc.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.components.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.mpsutil.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.platform.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.spawner.dev.build" />
        <fileset file="${build.tmp}/deps/mps-richtext/mps-richtext.zip/mps-richtext/languages/mps-richtext/de.slisson.mps.richtext.build.jar" />
        <fileset file="${build.tmp}/deps/mps-tables/mps-tables.zip/mps-tables/languages/mps-tables/de.slisson.mps.tables.build.jar" />
        <fileset file="${build.tmp}/deps/mps-multiline/mps-multiline.zip/mps-multiline/languages/mps-multiline/mps-multiline.build.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.com.mbeddr.doc.dev.build" depends="java.compile.com.mbeddr.core.dev.build, java.compile.com.mbeddr.debugger.dev.build, java.compile.com.mbeddr.mpsutil.dev.build, java.compile.com.mbeddr.platform.dev.build, java.compile.com.mbeddr.spawner.dev.build, fetchDependencies">
    <mkdir dir="${mbeddr.build}/solutions/com.mbeddr.doc.dev.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.mbeddr.doc.dev.build" />
    <javac destdir="${build.tmp}/java/out/com.mbeddr.doc.dev.build" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${mbeddr.build}/solutions/com.mbeddr.doc.dev.build/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/com.mbeddr.core.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.debugger.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.mpsutil.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.platform.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.spawner.dev.build" />
        <fileset file="${build.tmp}/deps/mps-richtext/mps-richtext.zip/mps-richtext/languages/mps-richtext/de.slisson.mps.richtext.build.jar" />
        <fileset file="${build.tmp}/deps/mps-tables/mps-tables.zip/mps-tables/languages/mps-tables/de.slisson.mps.tables.build.jar" />
        <fileset file="${build.tmp}/deps/mps-multiline/mps-multiline.zip/mps-multiline/languages/mps-multiline/mps-multiline.build.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.com.mbeddr.ext.units.dev.build" depends="java.compile.com.mbeddr.core.dev.build, java.compile.com.mbeddr.debugger.dev.build, java.compile.com.mbeddr.mpsutil.dev.build, java.compile.com.mbeddr.platform.dev.build, java.compile.com.mbeddr.spawner.dev.build, fetchDependencies">
    <mkdir dir="${mbeddr.build}/solutions/com.mbeddr.ext.units.dev.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.mbeddr.ext.units.dev.build" />
    <javac destdir="${build.tmp}/java/out/com.mbeddr.ext.units.dev.build" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${mbeddr.build}/solutions/com.mbeddr.ext.units.dev.build/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/com.mbeddr.core.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.debugger.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.mpsutil.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.platform.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.spawner.dev.build" />
        <fileset file="${build.tmp}/deps/mps-richtext/mps-richtext.zip/mps-richtext/languages/mps-richtext/de.slisson.mps.richtext.build.jar" />
        <fileset file="${build.tmp}/deps/mps-tables/mps-tables.zip/mps-tables/languages/mps-tables/de.slisson.mps.tables.build.jar" />
        <fileset file="${build.tmp}/deps/mps-multiline/mps-multiline.zip/mps-multiline/languages/mps-multiline/mps-multiline.build.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.com.mbeddr.ext.statemachinesInComponents.dev.build" depends="java.compile.com.mbeddr.core.dev.build, java.compile.com.mbeddr.debugger.dev.build, java.compile.com.mbeddr.ext.components.dev.build, java.compile.com.mbeddr.ext.statemachine.dev.build, java.compile.com.mbeddr.mpsutil.dev.build, java.compile.com.mbeddr.platform.dev.build, java.compile.com.mbeddr.spawner.dev.build, fetchDependencies">
    <mkdir dir="${mbeddr.build}/solutions/com.mbeddr.ext.statemachinesInComponents.dev.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.mbeddr.ext.statemachinesInComponents.dev.build" />
    <javac destdir="${build.tmp}/java/out/com.mbeddr.ext.statemachinesInComponents.dev.build" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${mbeddr.build}/solutions/com.mbeddr.ext.statemachinesInComponents.dev.build/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/com.mbeddr.core.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.debugger.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.components.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.statemachine.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.mpsutil.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.platform.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.spawner.dev.build" />
        <fileset file="${build.tmp}/deps/mps-richtext/mps-richtext.zip/mps-richtext/languages/mps-richtext/de.slisson.mps.richtext.build.jar" />
        <fileset file="${build.tmp}/deps/mps-tables/mps-tables.zip/mps-tables/languages/mps-tables/de.slisson.mps.tables.build.jar" />
        <fileset file="${build.tmp}/deps/mps-multiline/mps-multiline.zip/mps-multiline/languages/mps-multiline/mps-multiline.build.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.com.mbeddr.ext.statemachine.dev.build" depends="java.compile.com.mbeddr.core.dev.build, java.compile.com.mbeddr.debugger.dev.build, java.compile.com.mbeddr.mpsutil.dev.build, java.compile.com.mbeddr.platform.dev.build, java.compile.com.mbeddr.spawner.dev.build, fetchDependencies">
    <mkdir dir="${mbeddr.build}/solutions/com.mbeddr.ext.statemachine.dev.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.mbeddr.ext.statemachine.dev.build" />
    <javac destdir="${build.tmp}/java/out/com.mbeddr.ext.statemachine.dev.build" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${mbeddr.build}/solutions/com.mbeddr.ext.statemachine.dev.build/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/com.mbeddr.core.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.debugger.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.mpsutil.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.platform.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.spawner.dev.build" />
        <fileset file="${build.tmp}/deps/mps-richtext/mps-richtext.zip/mps-richtext/languages/mps-richtext/de.slisson.mps.richtext.build.jar" />
        <fileset file="${build.tmp}/deps/mps-tables/mps-tables.zip/mps-tables/languages/mps-tables/de.slisson.mps.tables.build.jar" />
        <fileset file="${build.tmp}/deps/mps-multiline/mps-multiline.zip/mps-multiline/languages/mps-multiline/mps-multiline.build.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.com.mbeddr.ext.components.dev.build" depends="java.compile.com.mbeddr.core.dev.build, java.compile.com.mbeddr.debugger.dev.build, java.compile.com.mbeddr.mpsutil.dev.build, java.compile.com.mbeddr.platform.dev.build, java.compile.com.mbeddr.spawner.dev.build, fetchDependencies">
    <mkdir dir="${mbeddr.build}/solutions/com.mbeddr.ext.components.dev.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.mbeddr.ext.components.dev.build" />
    <javac destdir="${build.tmp}/java/out/com.mbeddr.ext.components.dev.build" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${mbeddr.build}/solutions/com.mbeddr.ext.components.dev.build/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/com.mbeddr.core.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.debugger.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.mpsutil.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.platform.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.spawner.dev.build" />
        <fileset file="${build.tmp}/deps/mps-richtext/mps-richtext.zip/mps-richtext/languages/mps-richtext/de.slisson.mps.richtext.build.jar" />
        <fileset file="${build.tmp}/deps/mps-tables/mps-tables.zip/mps-tables/languages/mps-tables/de.slisson.mps.tables.build.jar" />
        <fileset file="${build.tmp}/deps/mps-multiline/mps-multiline.zip/mps-multiline/languages/mps-multiline/mps-multiline.build.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.com.mbeddr.ext.tests.build" depends="java.compile.com.mbeddr.core.dev.build, java.compile.com.mbeddr.debugger.dev.build, java.compile.com.mbeddr.ext.components.dev.build, java.compile.com.mbeddr.ext.statemachine.dev.build, java.compile.com.mbeddr.ext.statemachinesInComponents.dev.build, java.compile.com.mbeddr.ext.units.dev.build, java.compile.com.mbeddr.mpsutil.dev.build, java.compile.com.mbeddr.platform.dev.build, java.compile.com.mbeddr.spawner.dev.build, fetchDependencies">
    <mkdir dir="${mbeddr.build}/solutions/com.mbeddr.ext.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.mbeddr.ext.tests.build" />
    <javac destdir="${build.tmp}/java/out/com.mbeddr.ext.tests.build" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${mbeddr.build}/solutions/com.mbeddr.ext.build/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/com.mbeddr.core.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.debugger.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.components.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.statemachine.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.statemachinesInComponents.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.units.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.mpsutil.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.platform.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.spawner.dev.build" />
        <fileset file="${build.tmp}/deps/mps-richtext/mps-richtext.zip/mps-richtext/languages/mps-richtext/de.slisson.mps.richtext.build.jar" />
        <fileset file="${build.tmp}/deps/mps-tables/mps-tables.zip/mps-tables/languages/mps-tables/de.slisson.mps.tables.build.jar" />
        <fileset file="${build.tmp}/deps/mps-multiline/mps-multiline.zip/mps-multiline/languages/mps-multiline/mps-multiline.build.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.com.mbeddr.analyses.cbmc.dev.build" depends="java.compile.com.mbeddr.analyses.base.dev.build, java.compile.com.mbeddr.analyses.yices.dev.build, java.compile.com.mbeddr.cc.ple.dev.build, java.compile.com.mbeddr.cc.req.dev.build, java.compile.com.mbeddr.core.dev.build, java.compile.com.mbeddr.debugger.dev.build, java.compile.com.mbeddr.doc.dev.build, java.compile.com.mbeddr.ext.components.dev.build, java.compile.com.mbeddr.ext.statemachine.dev.build, java.compile.com.mbeddr.ext.statemachinesInComponents.dev.build, java.compile.com.mbeddr.ext.units.dev.build, java.compile.com.mbeddr.mpsutil.dev.build, java.compile.com.mbeddr.platform.dev.build, java.compile.com.mbeddr.spawner.dev.build, fetchDependencies">
    <mkdir dir="${mbeddr.build}/solutions/com.mbeddr.analyses.cbmc.dev.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.mbeddr.analyses.cbmc.dev.build" />
    <javac destdir="${build.tmp}/java/out/com.mbeddr.analyses.cbmc.dev.build" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${mbeddr.build}/solutions/com.mbeddr.analyses.cbmc.dev.build/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/com.mbeddr.analyses.base.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.analyses.yices.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.cc.ple.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.cc.req.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.core.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.debugger.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.doc.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.components.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.statemachine.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.statemachinesInComponents.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.units.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.mpsutil.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.platform.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.spawner.dev.build" />
        <fileset file="${build.tmp}/deps/mps-richtext/mps-richtext.zip/mps-richtext/languages/mps-richtext/de.slisson.mps.richtext.build.jar" />
        <fileset file="${build.tmp}/deps/mps-tables/mps-tables.zip/mps-tables/languages/mps-tables/de.slisson.mps.tables.build.jar" />
        <fileset file="${build.tmp}/deps/mps-multiline/mps-multiline.zip/mps-multiline/languages/mps-multiline/mps-multiline.build.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.com.mbeddr.analyses.base.dev.build" depends="java.compile.com.mbeddr.cc.ple.dev.build, java.compile.com.mbeddr.cc.req.dev.build, java.compile.com.mbeddr.core.dev.build, java.compile.com.mbeddr.debugger.dev.build, java.compile.com.mbeddr.doc.dev.build, java.compile.com.mbeddr.ext.components.dev.build, java.compile.com.mbeddr.ext.units.dev.build, java.compile.com.mbeddr.mpsutil.dev.build, java.compile.com.mbeddr.platform.dev.build, java.compile.com.mbeddr.spawner.dev.build, fetchDependencies">
    <mkdir dir="${mbeddr.build}/solutions/com.mbeddr.analyses.base.dev.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.mbeddr.analyses.base.dev.build" />
    <javac destdir="${build.tmp}/java/out/com.mbeddr.analyses.base.dev.build" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${mbeddr.build}/solutions/com.mbeddr.analyses.base.dev.build/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/com.mbeddr.cc.ple.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.cc.req.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.core.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.debugger.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.doc.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.components.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.units.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.mpsutil.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.platform.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.spawner.dev.build" />
        <fileset file="${build.tmp}/deps/mps-richtext/mps-richtext.zip/mps-richtext/languages/mps-richtext/de.slisson.mps.richtext.build.jar" />
        <fileset file="${build.tmp}/deps/mps-tables/mps-tables.zip/mps-tables/languages/mps-tables/de.slisson.mps.tables.build.jar" />
        <fileset file="${build.tmp}/deps/mps-multiline/mps-multiline.zip/mps-multiline/languages/mps-multiline/mps-multiline.build.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.com.mbeddr.analyses.yices.dev.build" depends="java.compile.com.mbeddr.analyses.base.dev.build, java.compile.com.mbeddr.cc.ple.dev.build, java.compile.com.mbeddr.cc.req.dev.build, java.compile.com.mbeddr.core.dev.build, java.compile.com.mbeddr.debugger.dev.build, java.compile.com.mbeddr.doc.dev.build, java.compile.com.mbeddr.ext.components.dev.build, java.compile.com.mbeddr.ext.units.dev.build, java.compile.com.mbeddr.mpsutil.dev.build, java.compile.com.mbeddr.platform.dev.build, java.compile.com.mbeddr.spawner.dev.build, fetchDependencies">
    <mkdir dir="${mbeddr.build}/solutions/com.mbeddr.analyses.yices.dev.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.mbeddr.analyses.yices.dev.build" />
    <javac destdir="${build.tmp}/java/out/com.mbeddr.analyses.yices.dev.build" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${mbeddr.build}/solutions/com.mbeddr.analyses.yices.dev.build/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/com.mbeddr.analyses.base.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.cc.ple.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.cc.req.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.core.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.debugger.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.doc.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.components.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.units.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.mpsutil.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.platform.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.spawner.dev.build" />
        <fileset file="${build.tmp}/deps/mps-richtext/mps-richtext.zip/mps-richtext/languages/mps-richtext/de.slisson.mps.richtext.build.jar" />
        <fileset file="${build.tmp}/deps/mps-tables/mps-tables.zip/mps-tables/languages/mps-tables/de.slisson.mps.tables.build.jar" />
        <fileset file="${build.tmp}/deps/mps-multiline/mps-multiline.zip/mps-multiline/languages/mps-multiline/mps-multiline.build.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.com.mbeddr.analyses.nusmv.dev.build" depends="java.compile.com.mbeddr.analyses.base.dev.build, java.compile.com.mbeddr.cc.ple.dev.build, java.compile.com.mbeddr.cc.req.dev.build, java.compile.com.mbeddr.core.dev.build, java.compile.com.mbeddr.debugger.dev.build, java.compile.com.mbeddr.doc.dev.build, java.compile.com.mbeddr.ext.components.dev.build, java.compile.com.mbeddr.ext.statemachine.dev.build, java.compile.com.mbeddr.ext.statemachinesInComponents.dev.build, java.compile.com.mbeddr.ext.units.dev.build, java.compile.com.mbeddr.mpsutil.dev.build, java.compile.com.mbeddr.platform.dev.build, java.compile.com.mbeddr.spawner.dev.build, fetchDependencies">
    <mkdir dir="${mbeddr.build}/solutions/com.mbeddr.analyses.nusmv.dev.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.mbeddr.analyses.nusmv.dev.build" />
    <javac destdir="${build.tmp}/java/out/com.mbeddr.analyses.nusmv.dev.build" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${mbeddr.build}/solutions/com.mbeddr.analyses.nusmv.dev.build/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/com.mbeddr.analyses.base.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.cc.ple.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.cc.req.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.core.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.debugger.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.doc.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.components.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.statemachine.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.statemachinesInComponents.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.units.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.mpsutil.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.platform.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.spawner.dev.build" />
        <fileset file="${build.tmp}/deps/mps-richtext/mps-richtext.zip/mps-richtext/languages/mps-richtext/de.slisson.mps.richtext.build.jar" />
        <fileset file="${build.tmp}/deps/mps-tables/mps-tables.zip/mps-tables/languages/mps-tables/de.slisson.mps.tables.build.jar" />
        <fileset file="${build.tmp}/deps/mps-multiline/mps-multiline.zip/mps-multiline/languages/mps-multiline/mps-multiline.build.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.com.mbeddr.analyses.tests.dev.build" depends="java.compile.com.mbeddr.analyses.base.dev.build, java.compile.com.mbeddr.analyses.cbmc.dev.build, java.compile.com.mbeddr.analyses.nusmv.dev.build, java.compile.com.mbeddr.analyses.yices.dev.build, java.compile.com.mbeddr.cc.ple.dev.build, java.compile.com.mbeddr.cc.req.dev.build, java.compile.com.mbeddr.core.dev.build, java.compile.com.mbeddr.debugger.dev.build, java.compile.com.mbeddr.doc.dev.build, java.compile.com.mbeddr.ext.components.dev.build, java.compile.com.mbeddr.ext.statemachine.dev.build, java.compile.com.mbeddr.ext.statemachinesInComponents.dev.build, java.compile.com.mbeddr.ext.tests.build, java.compile.com.mbeddr.ext.units.dev.build, java.compile.com.mbeddr.mpsutil.dev.build, java.compile.com.mbeddr.platform.dev.build, java.compile.com.mbeddr.spawner.dev.build, fetchDependencies">
    <mkdir dir="${mbeddr.build}/solutions/com.mbeddr.analyses.dev.build/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.mbeddr.analyses.tests.dev.build" />
    <javac destdir="${build.tmp}/java/out/com.mbeddr.analyses.tests.dev.build" fork="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${mbeddr.build}/solutions/com.mbeddr.analyses.dev.build/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/com.mbeddr.analyses.base.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.analyses.cbmc.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.analyses.nusmv.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.analyses.yices.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.cc.ple.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.cc.req.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.core.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.debugger.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.doc.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.components.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.statemachine.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.statemachinesInComponents.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.tests.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.ext.units.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.mpsutil.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.platform.dev.build" />
        <pathelement path="${build.tmp}/java/out/com.mbeddr.spawner.dev.build" />
        <fileset file="${build.tmp}/deps/mps-richtext/mps-richtext.zip/mps-richtext/languages/mps-richtext/de.slisson.mps.richtext.build.jar" />
        <fileset file="${build.tmp}/deps/mps-tables/mps-tables.zip/mps-tables/languages/mps-tables/de.slisson.mps.tables.build.jar" />
        <fileset file="${build.tmp}/deps/mps-multiline/mps-multiline.zip/mps-multiline/languages/mps-multiline/mps-multiline.build.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="cleanSources">
    <delete dir="${mbeddr.build}/solutions/com.mbeddr.debugger.dev.build/source_gen" />
    <delete dir="${mbeddr.build}/solutions/com.mbeddr.debugger.tests.dev.build/source_gen" />
    <delete dir="${mbeddr.github.core.home}/code/languages/com.mbeddr.mpsutil/languages/com.mbeddr.mpsutil.blutil/source_gen" />
    <delete dir="${mbeddr.github.core.home}/code/languages/com.mbeddr.mpsutil/languages/com.mbeddr.mpsutil.blutil/generator/source_gen" />
    <delete dir="${mbeddr.github.core.home}/code/languages/com.mbeddr.mpsutil/languages/com.mbeddr.mpsutil.blutil/solutions/source_gen" />
    <delete dir="${mbeddr.build}/solutions/com.mbeddr.spawner.dev.build/source_gen" />
    <delete dir="${mbeddr.github.core.home}/code/languages/com.mbeddr.mpsutil/languages/com.mbeddr.mpsutil.buildutil/source_gen" />
    <delete dir="${mbeddr.build}/solutions/com.mbeddr.allInOne/source_gen" />
    <delete dir="${mbeddr.build}/solutions/com.mbeddr.analyses.base.dev.build/source_gen" />
    <delete dir="${mbeddr.build}/solutions/com.mbeddr.analyses.cbmc.dev.build/source_gen" />
    <delete dir="${mbeddr.build}/solutions/com.mbeddr.analyses.nusmv.dev.build/source_gen" />
    <delete dir="${mbeddr.build}/solutions/com.mbeddr.analyses.dev.build/source_gen" />
    <delete dir="${mbeddr.build}/solutions/com.mbeddr.analyses.yices.dev.build/source_gen" />
    <delete dir="${mbeddr.build}/solutions/com.mbeddr.cc.ple.dev.build/source_gen" />
    <delete dir="${mbeddr.build}/solutions/com.mbeddr.cc.dev.build/source_gen" />
    <delete dir="${mbeddr.build}/solutions/com.mbeddr.cc.tests.dev.build/source_gen" />
    <delete dir="${mbeddr.build}/solutions/com.mbeddr.core.dev.build/source_gen" />
    <delete dir="${mbeddr.build}/solutions/com.mbeddr.core.tests.build/source_gen" />
    <delete dir="${mbeddr.build}/solutions/com.mbeddr.debugger-test.build.dev.build/source_gen" />
    <delete dir="${mbeddr.build}/solutions/com.mbeddr.doc.dev.build/source_gen" />
    <delete dir="${mbeddr.build}/solutions/com.mbeddr.ext.components.dev.build/source_gen" />
    <delete dir="${mbeddr.build}/solutions/com.mbeddr.ext.statemachine.dev.build/source_gen" />
    <delete dir="${mbeddr.build}/solutions/com.mbeddr.ext.statemachinesInComponents.dev.build/source_gen" />
    <delete dir="${mbeddr.build}/solutions/com.mbeddr.ext.build/source_gen" />
    <delete dir="${mbeddr.build}/solutions/com.mbeddr.ext.units.dev.build/source_gen" />
    <delete dir="${mbeddr.github.core.home}/code/languages/com.mbeddr.mpsutil/languages/com.mbeddr.mpsutil.buildutil/generator/source_gen" />
    <delete dir="${mbeddr.build}/solutions/com.mbeddr.mpsutil.dev.build/source_gen" />
    <delete dir="${mbeddr.build}/solutions/com.mbeddr.platform.dev.build/source_gen" />
    <delete dir="${mbeddr.build}/solutions/com.mbeddr.build.build/source_gen" />
  </target>
</project>