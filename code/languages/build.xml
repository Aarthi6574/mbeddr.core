<project name="mbeddr download and deploy plugins" default="build-languages">
	
  <property file="build.properties"/>  
  <taskdef name="make-tests" classname="com.mbeddr.tools.ant.MakeTestsTask" classpath="${mbeddr.github.core.home}/tools/ant/tasks/MakeTestsTask.jar" />
  
  <!-- url/mps properties -->
  <property name="plugins.folder.name" value="plugins"/>
  <property name="base-url" value="http://build.mbeddr.com/guestAuth/repository/download"/>
  <property name="latest-build" value="latest.lastSuccessful"/>
  
  <!-- com.mbeddr.mpsutil -->  
  <property name="com.mbeddr.mpsutil.build-path.postfix" value="${mbeddr.github.core.home}/build/com.mbeddr.mpsutil/build/artifacts/com.mbeddr.mpsutil.build" />  
  <property name="com.mbeddr.mpsutil.build-file.location" value="${mbeddr.github.core.home}/build/com.mbeddr.mpsutil" />    
  <property name="com.mbeddr.mpsutil.build-file.name" value="build.xml" />  
  <property name="com.mbeddr.mpsutil.working-dir" value="${mbeddr.github.core.home}/code/languages/com.mbeddr.mpsutil" />  
  
  <!-- com.mbeddr.debugger -->  
  <property name="com.mbeddr.debugger.build-path.postfix" value="${mbeddr.github.core.home}/build/com.mbeddr.debugger/build/artifacts/com.mbeddr.debugger.build" />  
  <property name="com.mbeddr.debugger.build-file.location" value="${mbeddr.github.core.home}/build/com.mbeddr.debugger" />    
  <property name="com.mbeddr.debugger.main-build-file.name" value="build.xml" />  
  <property name="com.mbeddr.debugger.tests-build-file.name" value="build-tests.xml" />  
  <property name="com.mbeddr.debugger.working-dir" value="${mbeddr.github.core.home}/code/languages/com.mbeddr.debugger" />  
  
  <!-- com.mbeddr.core -->  
  <property name="com.mbeddr.core.build-path.postfix" value="${mbeddr.github.core.home}/build/com.mbeddr.core/build/artifacts/com.mbeddr.core.build" />  
  <property name="com.mbeddr.core.build-file.location" value="${mbeddr.github.core.home}/build/com.mbeddr.core" />    
  <property name="com.mbeddr.core.main-build-file.name" value="build.xml" />  
  <property name="com.mbeddr.core.ts-tests-build-file.name" value="build-ts-tests.xml" />  
  <property name="com.mbeddr.core.ex-tests-build-file.name" value="build-ex-tests.xml" />  
  <property name="com.mbeddr.core.working-dir" value="${mbeddr.github.core.home}/code/languages/com.mbeddr.core" />  
  
  <!-- com.mbeddr.doc -->  
  <property name="com.mbeddr.doc.build-path.postfix" value="${mbeddr.github.core.home}/build/com.mbeddr.doc/build/artifacts/com.mbeddr.doc.build" />  
  <property name="com.mbeddr.doc.build-file.location" value="${mbeddr.github.core.home}/build/com.mbeddr.doc" />    
  <property name="com.mbeddr.doc.main-build-file.name" value="build.xml" />  
  <property name="com.mbeddr.doc.working-dir" value="${mbeddr.github.core.home}/code/languages/com.mbeddr.doc" />  
  
  <!-- com.mbeddr.cc -->  
  <property name="com.mbeddr.cc.build-path.postfix" value="${mbeddr.github.core.home}/build/com.mbeddr.cc/build/artifacts/com.mbeddr.cc.build" />  
  <property name="com.mbeddr.cc.build-file.location" value="${mbeddr.github.core.home}/build/com.mbeddr.cc" />    
  <property name="com.mbeddr.cc.ple-build-file.name" value="build-ple.xml" />  
  <property name="com.mbeddr.cc.req-build-file.name" value="build-req.xml" />    
  <property name="com.mbeddr.cc.ts-tests-build-file.name" value="build-ts-tests.xml" /> 
  <property name="com.mbeddr.cc.ex-tests-build-file.name" value="build-ex-tests.xml" /> 
  <property name="com.mbeddr.cc.working-dir" value="${mbeddr.github.core.home}/code/languages/com.mbeddr.cc" />  
  
  <!-- com.mbeddr.debugger.testing -->  
  <property name="com.mbeddr.debugger.testing.build-path.postfix" value="${mbeddr.github.core.home}/build/com.mbeddr.debugger.testing/build/artifacts/com.mbeddr.debugger.testing.build" />  
  <property name="com.mbeddr.debugger.testing.build-file.location" value="${mbeddr.github.core.home}/build/com.mbeddr.debugger.testing" />     
  <property name="com.mbeddr.debugger.testing.runtime-tests-build-file.name" value="debugger-testing.tests.runtime.xml" /> 
  <property name="com.mbeddr.debugger.testing.runtime-build-file.name" value="debugger-testing.xml" /> 
  <property name="com.mbeddr.debugger.testing.cross-build-file.name" value="debugger.testing.tests.cross.xml" /> 
  <property name="com.mbeddr.debugger.testing.core-tests-build-file.name" value="debugger.testing.tests.core.xml" /> 
  <property name="com.mbeddr.debugger.testing.statemachine-tests-build-file.name" value="debugger.testing.tests.ext.statemachines.xml" /> 
  <property name="com.mbeddr.debugger.testing.physical-units-tests-build-file.name" value="debugger.testing.tests.ext.physical-units.xml" /> 
  <property name="com.mbeddr.debugger.testing.components-tests-build-file.name" value="debugger.testing.tests.ext.components.xml" /> 
  <property name="com.mbeddr.debugger.testing.working-dir" value="${mbeddr.github.core.home}/code/languages/com.mbeddr.debugger.testing" />  

  <!-- com.mbeddr.ext -->  
  <property name="com.mbeddr.ext.build-path.postfix" value="${mbeddr.github.core.home}/build/com.mbeddr.ext/build/artifacts/com.mbeddr.ext.build" />  
  <property name="com.mbeddr.ext.build-file.location" value="${mbeddr.github.core.home}/build/com.mbeddr.ext" />     
  <property name="com.mbeddr.ext.components-build-file.name" value="build-components.xml" /> 
  <property name="com.mbeddr.ext.SmInComp-build-file.name" value="build-SmInComp.xml" /> 
  <property name="com.mbeddr.ext.units-build-file.name" value="build-units.xml" /> 
  <property name="com.mbeddr.ext.statemachine-build-file.name" value="build-statemachine.xml" /> 
  <property name="com.mbeddr.ext.ex-tests-build-file.name" value="build-ex-tests.xml" /> 
  <property name="com.mbeddr.ext.ts-tests-build-file.name" value="build-ts-tests.xml" /> 
  <property name="com.mbeddr.ext.working-dir" value="${mbeddr.github.core.home}/code/languages/com.mbeddr.ext" />  
  
  <!-- com.mbeddr.analyses -->  
  <property name="com.mbeddr.analyses.build-path.postfix" value="${mbeddr.github.core.home}/build/com.mbeddr.analyses/build/artifacts/com.mbeddr.analyses.build" />  
  <property name="com.mbeddr.analyses.build-file.location" value="${mbeddr.github.core.home}/build/com.mbeddr.analyses" />     
  <property name="com.mbeddr.analyses.base-build-file.name" value="build-base.xml" /> 
  <property name="com.mbeddr.analyses.cbmc-build-file.name" value="build-cbmc.xml" /> 
  <property name="com.mbeddr.analyses.nusmv-build-file.name" value="build-nusmv.xml" /> 
  <property name="com.mbeddr.analyses.yices-build-file.name" value="build-yices.xml" /> 
  <property name="com.mbeddr.analyses.ex-tests-build-file.name" value="build-ex-tests.xml" /> 
  <property name="com.mbeddr.analyses.ts-tests-build-file.name" value="build-ts-tests.xml" /> 
  <property name="com.mbeddr.analyses.working-dir" value="${mbeddr.github.core.home}/code/languages/com.mbeddr.analyses" />  
  
  <!-- mbeddr.tutorial -->
  <property name="com.mbeddr.tutorial.build-path.postfix" value="${mbeddr.github.core.home}/build/com.mbeddr.tutorial/build/artifacts/com.mbeddr.tutorial" />  
  <property name="com.mbeddr.tutorial.build-file.location" value="${mbeddr.github.core.home}/build/com.mbeddr.tutorial" />    
  <property name="com.mbeddr.tutorial.languages-build-file.name" value="build-languages.xml" /> 
  <property name="com.mbeddr.tutorial.solutions-build-file.name" value="build-solutions.xml" /> 
  <property name="com.mbeddr.tutorial.tests-build-file.name" value="build-tests.xml" /> 
  <property name="com.mbeddr.tutorial.working-dir" value="${mbeddr.github.core.home}/applications/tutorial" />  
  
  <!-- mbeddr.platform -->
  <property name="com.mbeddr.platform.build-path.postfix" value="${mbeddr.github.core.home}/build/com.mbeddr.platform/build/artifacts/com.mbeddr.platform" />  
  <property name="com.mbeddr.platform.build-file.location" value="${mbeddr.github.core.home}/build/com.mbeddr.platform" />    
  <property name="com.mbeddr.platform.build-file.name" value="build.xml" /> 
  <property name="com.mbeddr.platform.working-dir" value="${mbeddr.github.core.home}/code/languages/com.mbeddr.platform" />  
  
  <!-- multiline -->  
  <property name="multiline.zip-file.name" value="mps-multiline.zip" />
  <property name="multiline.expanded-folder.name" value="mps-multiline" />
  <property name="multiline.build-id" value="RichtextTables_MpsMultiline" />  
  <property name="multiline.build-path" value="${mbeddr.github.core.home}/build/mps-multiline/build/artifacts/mps-multiline" />  
  <property name="artifacts.mps-multiline" value="${multiline.build-path}" />  
    
  <!-- mps-richtext -->  
  <property name="mps-richtext.zip-file.name" value="mps-richtext.zip" />
  <property name="mps-richtext.expanded-folder.name" value="mps-richtext" />
  <property name="mps-richtext.build-id" value="RichtextTables_MpsRichtext" />
  <property name="mps-richtext.build-path" value="${mbeddr.github.core.home}/build/mps-richtext/build/artifacts/mps-richtext" />  
  <property name="artifacts.mps-richtext" value="${mps-richtext.build-path}" />  
  
  <!-- mps-editor-override -->
  <property name="mps-editor-override.zip-file.name" value="mps-editor-override.zip" />
  <property name="mps-editor-override.expanded-folder.name" value="mps-editor-override" />  
  <property name="mps-editor-override.build-id" value="RichtextTables_MpsEditorOverride" />   
  <property name="mps-editor-override.build-path" value="${mbeddr.github.core.home}/build/mps-editor-override/build/artifacts/mps-editor-override" />  
  <property name="artifacts.mps-editor-override" value="${mps-editor-override.build-path}" />  
  
  <!-- mps-tables -->
  <property name="mps-tables.zip-file.name" value="mps-tables.zip" />
  <property name="mps-tables.expanded-folder.name" value="mps-tables" />  
  <property name="mps-tables.build-id" value="RichtextTables_MpsTables" />   
  <property name="mps-tables.build-path" value="${mbeddr.github.core.home}/build/mps-tables/build/artifacts/mps-tables" />  
  <property name="artifacts.mps-tables" value="${mps-tables.build-path}" />  
  
  <!-- spawner -->
  <property name="spawner.suburl" value="com.mbeddr.spawner.build" /> 
  <property name="spawner.zip-file.name" value="com.mbeddr.spawner.zip" />
  <property name="spawner.expanded-folder.name" value="mbeddr.spawner" />
  <property name="spawner.build-id" value="MbeddrCore_BuildSpawner" />
  <property name="spawner.build-path" value="${mbeddr.github.core.home}/build/com.mbeddr.spawner/build/artifacts/com.mbeddr.spawner.build" />  
  <property name="artifacts.com.mbeddr.spawner.build" value="${spawner.build-path}" />

  
  <!-- misc -->
  <property name="clean-generated-code.task" value="cleanSources" /> 
  <property name="clean-plugins.task" value="clean" /> 
  <property name="generate-code.task" value="generate" /> 
  <property name="build-plugin.task" value="assemble" /> 
  <property name="run-tests.task" value="check" />      
   
  <!-- validations -->
  <fail unless="mps.home">mps.home must be set in your build.properties</fail>
  <fail unless="mbeddr.github.core.home">mbeddr.github.core.home must be set in your build.properties</fail>
  <fail message="Your MPS installation (${mps.home}) doesn't contain a ${plugins.folder.name} folder">
      <condition>
          <not>
              <resourcecount count="1">
				  <dirset dir="${mps.home}" >
					  <include name="${plugins.folder.name}"/>
				  </dirset> 
              </resourcecount>
          </not>
      </condition>
  </fail>
	    	    	    	  
  <target name="install-plugins">
	  <!-- create directory structure -->
	  <mkdir dir="${multiline.build-path}"/>
	  <mkdir dir="${mps-editor-override.build-path}"/>
	  <mkdir dir="${mps-richtext.build-path}"/>
	  <mkdir dir="${mps-tables.build-path}"/>	  
	  <mkdir dir="${spawner.build-path}"/> 
	  
	  <!-- clean-plugin-folder -->
	  <delete dir="${mps.home}/${plugins.folder.name}/${mps-editor-override.expanded-folder.name}" verbose="true" />
	  <delete dir="${mps.home}/${plugins.folder.name}/${multiline.expanded-folder.name}" verbose="true" />
	  <delete dir="${mps.home}/${plugins.folder.name}/${mps-richtext.expanded-folder.name}" verbose="true" />
	  <delete dir="${mps.home}/${plugins.folder.name}/${mps-tables.expanded-folder.name}" verbose="true" />
	  <delete dir="${mps.home}/${plugins.folder.name}/${spawner.expanded-folder.name}" verbose="true" />
	  
	  <delete file="${multiline.build-path}/${multiline.zip-file.name}"/>	  
	  <delete file="${mps-editor-override.build-path}/${mps-editor-override.zip-file.name}"/>
	  <delete file="${mps-richtext.build-path}/${mps-richtext.zip-file.name}"/>
	  <delete file="${mps-tables.build-path}/${mps-tables.zip-file.name}"/>
	  <delete file="${spawner.build-path}/${spawner.zip-file.name}"/>
	    	  
	  <!-- download-plugins -->
	  <get src="${base-url}/${multiline.build-id}/${latest-build}/${multiline.zip-file.name}" dest="${multiline.build-path}" verbose="true" skipexisting="true" usetimestamp="true"/>
	  <get src="${base-url}/${mps-richtext.build-id}/${latest-build}/${mps-richtext.zip-file.name}" dest="${mps-richtext.build-path}" verbose="true" skipexisting="true" usetimestamp="true"/>
	  <get src="${base-url}/${mps-editor-override.build-id}/${latest-build}/${mps-editor-override.zip-file.name}" dest="${mps-editor-override.build-path}" verbose="true" skipexisting="true" usetimestamp="true"/>
	  <get src="${base-url}/${mps-tables.build-id}/${latest-build}/${mps-tables.zip-file.name}" dest="${mps-tables.build-path}" verbose="true" skipexisting="true" usetimestamp="true"/>
	  <get src="${base-url}/${spawner.build-id}/${latest-build}/${spawner.suburl}/${spawner.zip-file.name}" dest="${spawner.build-path}" verbose="true" skipexisting="true" usetimestamp="true"/>	 
	  	 
	  <!-- unzip-plugins -->
	  <unzip src="${multiline.build-path}/${multiline.zip-file.name}" dest="${mps.home}/${plugins.folder.name}" overwrite="true" />
	  <unzip src="${mps-richtext.build-path}/${mps-richtext.zip-file.name}" dest="${mps.home}/${plugins.folder.name}" overwrite="true" />
	  <unzip src="${mps-editor-override.build-path}/${mps-editor-override.zip-file.name}" dest="${mps.home}/${plugins.folder.name}" overwrite="true" />
	  <unzip src="${mps-tables.build-path}/${mps-tables.zip-file.name}" dest="${mps.home}/${plugins.folder.name}" overwrite="true" />
	  <unzip src="${spawner.build-path}/${spawner.zip-file.name}" dest="${mps.home}/${plugins.folder.name}" overwrite="true" /> 	 	  
  </target>

  <target name="build-mpsutil">
	  <ant antfile="${com.mbeddr.mpsutil.build-file.name}" dir="${com.mbeddr.mpsutil.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.mpsutil.build-file.name}" dir="${com.mbeddr.mpsutil.build-file.location}" target="${clean-generated-code.task}" />	  
      <ant antfile="${com.mbeddr.mpsutil.build-file.name}" dir="${com.mbeddr.mpsutil.build-file.location}" target="${generate-code.task}" />
      <ant antfile="${com.mbeddr.mpsutil.build-file.name}" dir="${com.mbeddr.mpsutil.build-file.location}" target="${build-plugin.task}" />	  
  </target>
  
  <target name="build-debugger">
	  <ant antfile="${com.mbeddr.debugger.main-build-file.name}" dir="${com.mbeddr.debugger.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.debugger.main-build-file.name}" dir="${com.mbeddr.debugger.build-file.location}" target="${clean-generated-code.task}" />
	  <ant antfile="${com.mbeddr.debugger.main-build-file.name}" dir="${com.mbeddr.debugger.build-file.location}" target="${generate-code.task}" />
	  <ant antfile="${com.mbeddr.debugger.main-build-file.name}" dir="${com.mbeddr.debugger.build-file.location}" target="${build-plugin.task}" />
  </target>
  
  <target name="build-core">
	  <ant antfile="${com.mbeddr.core.main-build-file.name}" dir="${com.mbeddr.core.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.core.main-build-file.name}" dir="${com.mbeddr.core.build-file.location}" target="${clean-generated-code.task}" />
      <ant antfile="${com.mbeddr.core.main-build-file.name}" dir="${com.mbeddr.core.build-file.location}" target="${generate-code.task}" />
      <ant antfile="${com.mbeddr.core.main-build-file.name}" dir="${com.mbeddr.core.build-file.location}" target="${build-plugin.task}" />	  
  </target>

  <target name="build-doc">
	  <ant antfile="${com.mbeddr.doc.main-build-file.name}" dir="${com.mbeddr.doc.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.doc.main-build-file.name}" dir="${com.mbeddr.doc.build-file.location}" target="${clean-generated-code.task}" />	  
      <ant antfile="${com.mbeddr.doc.main-build-file.name}" dir="${com.mbeddr.doc.build-file.location}" target="${generate-code.task}" />
      <ant antfile="${com.mbeddr.doc.main-build-file.name}" dir="${com.mbeddr.doc.build-file.location}" target="${build-plugin.task}" />
  </target>  

  <target name="build-platform">
	  <ant antfile="${com.mbeddr.platform.build-file.name}" dir="${com.mbeddr.platform.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.platform.build-file.name}" dir="${com.mbeddr.platform.build-file.location}" target="${clean-generated-code.task}" />	  
	  <ant antfile="${com.mbeddr.platform.build-file.name}" dir="${com.mbeddr.platform.build-file.location}" target="${generate-code.task}" />
	  <ant antfile="${com.mbeddr.platform.build-file.name}" dir="${com.mbeddr.platform.build-file.location}" target="${build-plugin.task}" />
  </target>  

  <target name="build-ext.units">
	  <ant antfile="${com.mbeddr.ext.units-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${clean-generated-code.task}" />
	  <ant antfile="${com.mbeddr.ext.units-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${clean-plugins.task}" />
      <ant antfile="${com.mbeddr.ext.units-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${generate-code.task}" />
      <ant antfile="${com.mbeddr.ext.units-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${build-plugin.task}" />
  </target>

  <target name="build-ext.statemachine">
	  <ant antfile="${com.mbeddr.ext.statemachine-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${clean-generated-code.task}" />
	  <ant antfile="${com.mbeddr.ext.statemachine-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${clean-plugins.task}" />
      <ant antfile="${com.mbeddr.ext.statemachine-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${generate-code.task}" />
      <ant antfile="${com.mbeddr.ext.statemachine-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${build-plugin.task}" />
  </target>

  <target name="build-ext.components">
	  <ant antfile="${com.mbeddr.ext.components-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${clean-generated-code.task}" />
	  <ant antfile="${com.mbeddr.ext.components-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${clean-plugins.task}" />
      <ant antfile="${com.mbeddr.ext.components-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${generate-code.task}" />
      <ant antfile="${com.mbeddr.ext.components-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${build-plugin.task}" />
  </target>
  <target name="build-ext.SmInComp">
	  <ant antfile="${com.mbeddr.ext.SmInComp-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${clean-generated-code.task}" />
	  <ant antfile="${com.mbeddr.ext.SmInComp-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${clean-plugins.task}" />
      <ant antfile="${com.mbeddr.ext.SmInComp-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${generate-code.task}" />
      <ant antfile="${com.mbeddr.ext.SmInComp-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${build-plugin.task}" />
  </target>    

  <target name="build-cc.ple">
	  <ant antfile="${com.mbeddr.cc.ple-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${clean-plugins.task}" />	  
	  <ant antfile="${com.mbeddr.cc.ple-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${clean-generated-code.task}" />	  
      <ant antfile="${com.mbeddr.cc.ple-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${generate-code.task}" />
      <ant antfile="${com.mbeddr.cc.ple-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${build-plugin.task}" />	  
  </target>  

    
  <target name="build-cc.req">
	  <ant antfile="${com.mbeddr.cc.req-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.cc.req-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${clean-generated-code.task}" />
      <ant antfile="${com.mbeddr.cc.req-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${generate-code.task}" />
      <ant antfile="${com.mbeddr.cc.req-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${build-plugin.task}" /> 
  </target>    

  <target name="build-analyses.base">
	  <ant antfile="${com.mbeddr.analyses.base-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${clean-plugins.task}" />	
	  <ant antfile="${com.mbeddr.analyses.base-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${clean-generated-code.task}" />
      <ant antfile="${com.mbeddr.analyses.base-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${generate-code.task}" />
      <ant antfile="${com.mbeddr.analyses.base-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${build-plugin.task}" />         
  </target> 
  
  <target name="build-analyses.nusmv">
	  <ant antfile="${com.mbeddr.analyses.nusmv-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.analyses.nusmv-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${clean-generated-code.task}" />        
      <ant antfile="${com.mbeddr.analyses.nusmv-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${generate-code.task}" />
      <ant antfile="${com.mbeddr.analyses.nusmv-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${build-plugin.task}" />
  </target> 

  <target name="build-analyses.yices">
	  <ant antfile="${com.mbeddr.analyses.yices-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${clean-plugins.task}" />	  
	  	  <ant antfile="${com.mbeddr.analyses.yices-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${clean-generated-code.task}" />
      <ant antfile="${com.mbeddr.analyses.yices-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${generate-code.task}" />
      <ant antfile="${com.mbeddr.analyses.yices-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${build-plugin.task}" />       
  </target> 

  <target name="build-analyses.cbmc">
	  <ant antfile="${com.mbeddr.analyses.cbmc-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.analyses.cbmc-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${clean-generated-code.task}" />
      <ant antfile="${com.mbeddr.analyses.cbmc-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${generate-code.task}" />
      <ant antfile="${com.mbeddr.analyses.cbmc-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${build-plugin.task}" /> 
  </target>     


  <target name="build-languages">
	  <antcall target="build-mpsutil" />
	  <antcall target="build-debugger" />
	  <antcall target="build-platform" />
	  <antcall target="build-core" />
	  <antcall target="build-doc" />
	  <antcall target="build-ext.components" />	  
      <antcall target="build-ext.units" />	
      <antcall target="build-ext.statemachine" />	
      <antcall target="build-ext.SmInComp" />		  		  
	  <antcall target="build-cc.ple" />
	  <antcall target="build-cc.req" />	  
	  <antcall target="build-analyses.base" />	 
	  <antcall target="build-analyses.nusmv" />	 
	  <antcall target="build-analyses.yices" />	 
	  <antcall target="build-analyses.cbmc" />	 	  	  	  
  </target>	 

  <target name="build-and-run-tests" >
	   <antcall target="test-debugger" />
   	   <antcall target="test-core" />
   	   <antcall target="test-cc" />
   	   <antcall target="test-ext" />
   	   <antcall target="test-analyses" />
   	   <antcall target="build-tutorial" />	   	   
   	   <antcall target="test-tutorial" />
       <!-- <antcall target="test-debugging" /> -->
  </target>	        
    	  
  <target name="test-debugging">	
	  <ant antfile="${com.mbeddr.debugger.testing.runtime-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.runtime-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.cross-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.core-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.statemachine-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.physical-units-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.components-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.runtime-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${clean-generated-code.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.runtime-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${clean-generated-code.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.cross-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${clean-generated-code.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.core-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${clean-generated-code.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.statemachine-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${clean-generated-code.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.physical-units-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${clean-generated-code.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.components-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${clean-generated-code.task}" />
	   
      <ant antfile="${com.mbeddr.debugger.testing.runtime-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${generate-code.task}" />
      <ant antfile="${com.mbeddr.debugger.testing.runtime-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${build-plugin.task}" /> 	  
	  <ant antfile="${com.mbeddr.debugger.testing.cross-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${generate-code.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.cross-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${build-plugin.task}" />	  
	  <ant antfile="${com.mbeddr.debugger.testing.core-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${generate-code.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.core-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${build-plugin.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.statemachine-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${generate-code.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.statemachine-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${build-plugin.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.physical-units-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${generate-code.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.physical-units-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${build-plugin.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.components-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${generate-code.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.components-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${build-plugin.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.runtime-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${generate-code.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.runtime-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${build-plugin.task}" />		  	
	  <ant antfile="${com.mbeddr.debugger.testing.runtime-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${run-tests.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.runtime-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${run-tests.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.cross-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${run-tests.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.core-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${run-tests.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.statemachine-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${run-tests.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.physical-units-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${run-tests.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.components-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${run-tests.task}" />
  </target>

  <target name="test-core">	  
	  <ant antfile="${com.mbeddr.core.ex-tests-build-file.name}" dir="${com.mbeddr.core.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.core.ex-tests-build-file.name}" dir="${com.mbeddr.core.build-file.location}" target="${clean-generated-code.task}" />
	  <ant antfile="${com.mbeddr.core.ex-tests-build-file.name}" dir="${com.mbeddr.core.build-file.location}" target="${generate-code.task}" />
	  <ant antfile="${com.mbeddr.core.ex-tests-build-file.name}" dir="${com.mbeddr.core.build-file.location}" target="${build-plugin.task}" />
	  <antcall target="make-tests">
	      <param name="make-tests.dir" value="${com.mbeddr.core.working-dir}"/>
	  </antcall>
	  
	  <ant antfile="${com.mbeddr.core.ts-tests-build-file.name}" dir="${com.mbeddr.core.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.core.ts-tests-build-file.name}" dir="${com.mbeddr.core.build-file.location}" target="${clean-generated-code.task}" />
	  <ant antfile="${com.mbeddr.core.ts-tests-build-file.name}" dir="${com.mbeddr.core.build-file.location}" target="${generate-code.task}" />
	  <ant antfile="${com.mbeddr.core.ts-tests-build-file.name}" dir="${com.mbeddr.core.build-file.location}" target="${build-plugin.task}" />	  
	  <ant antfile="${com.mbeddr.core.ts-tests-build-file.name}" dir="${com.mbeddr.core.build-file.location}" target="${run-tests.task}" />
  </target>
	  
  <target name="test-debugger">
	  <ant antfile="${com.mbeddr.debugger.tests-build-file.name}" dir="${com.mbeddr.debugger.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.debugger.tests-build-file.name}" dir="${com.mbeddr.debugger.build-file.location}" target="${clean-generated-code.task}" />

	  <ant antfile="${com.mbeddr.debugger.tests-build-file.name}" dir="${com.mbeddr.debugger.build-file.location}" target="${generate-code.task}" />
	  <ant antfile="${com.mbeddr.debugger.tests-build-file.name}" dir="${com.mbeddr.debugger.build-file.location}" target="${build-plugin.task}" />
	  <ant antfile="${com.mbeddr.debugger.tests-build-file.name}" dir="${com.mbeddr.debugger.build-file.location}" target="${run-tests.task}" />
  </target>
	
  <target name="test-cc">	  
	  <ant antfile="${com.mbeddr.cc.ts-tests-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.cc.ts-tests-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${clean-generated-code.task}" />	  
	  <ant antfile="${com.mbeddr.cc.ts-tests-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${generate-code.task}" />
	  <ant antfile="${com.mbeddr.cc.ts-tests-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${build-plugin.task}" />
	  <ant antfile="${com.mbeddr.cc.ts-tests-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${run-tests.task}" />	
	  
	  <ant antfile="${com.mbeddr.cc.ex-tests-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.cc.ex-tests-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${clean-generated-code.task}" />	  
	  <ant antfile="${com.mbeddr.cc.ex-tests-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${generate-code.task}" />  
	  <antcall target="make-tests">
	      <param name="make-tests.dir" value="${com.mbeddr.cc.working-dir}"/>
	  </antcall>
  </target>
	  
  <target name="test-ext">
	  <ant antfile="${com.mbeddr.ext.ex-tests-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.ext.ex-tests-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${clean-generated-code.task}" />	 		 				  
	  <ant antfile="${com.mbeddr.ext.ex-tests-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${generate-code.task}" />	 			
	  <ant antfile="${com.mbeddr.ext.ex-tests-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${build-plugin.task}" />	
	  <antcall target="make-tests">
	      <param name="make-tests.dir" value="${com.mbeddr.ext.working-dir}"/>
	  </antcall>

	  <ant antfile="${com.mbeddr.ext.ts-tests-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.ext.ts-tests-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${clean-generated-code.task}" />	 		 				  
	  <ant antfile="${com.mbeddr.ext.ts-tests-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${generate-code.task}" />	 			
	  <ant antfile="${com.mbeddr.ext.ts-tests-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${build-plugin.task}" />	  
	  <ant antfile="${com.mbeddr.ext.ts-tests-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${run-tests.task}" />	
  </target>

  <target name="test-analyses">	  
	  <ant antfile="${com.mbeddr.analyses.ex-tests-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${clean-plugins.task}" />			   
	  <ant antfile="${com.mbeddr.analyses.ex-tests-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${clean-generated-code.task}" />	 				   
	  <ant antfile="${com.mbeddr.analyses.ex-tests-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${generate-code.task}" />	 	 			   
	  <ant antfile="${com.mbeddr.analyses.ex-tests-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${build-plugin.task}" />	 	  	  
	  <antcall target="make-tests">
	      <param name="make-tests.dir" value="${com.mbeddr.analyses.working-dir}"/>
	  </antcall>

	  <ant antfile="${com.mbeddr.analyses.ts-tests-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${clean-plugins.task}" />			   
	  <ant antfile="${com.mbeddr.analyses.ts-tests-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${clean-generated-code.task}" />	 				   
	  <ant antfile="${com.mbeddr.analyses.ts-tests-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${generate-code.task}" />	 	 			   
	  <ant antfile="${com.mbeddr.analyses.ts-tests-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${build-plugin.task}" /> 	 
	  <ant antfile="${com.mbeddr.analyses.ts-tests-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${run-tests.task}" />	
  </target>
  
  <target name="build-tutorial">	  
	  <ant antfile="${com.mbeddr.tutorial.languages-build-file.name}" dir="${com.mbeddr.tutorial.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.tutorial.languages-build-file.name}" dir="${com.mbeddr.tutorial.build-file.location}" target="${clean-generated-code.task}" />	  	  	  
	  <ant antfile="${com.mbeddr.tutorial.languages-build-file.name}" dir="${com.mbeddr.tutorial.build-file.location}" target="${generate-code.task}" />
	  <ant antfile="${com.mbeddr.tutorial.languages-build-file.name}" dir="${com.mbeddr.tutorial.build-file.location}" target="${build-plugin.task}" />
	  
	  <ant antfile="${com.mbeddr.tutorial.solutions-build-file.name}" dir="${com.mbeddr.tutorial.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.tutorial.solutions-build-file.name}" dir="${com.mbeddr.tutorial.build-file.location}" target="${clean-generated-code.task}" />	  		  
	  <ant antfile="${com.mbeddr.tutorial.solutions-build-file.name}" dir="${com.mbeddr.tutorial.build-file.location}" target="${generate-code.task}" />
	  <ant antfile="${com.mbeddr.tutorial.solutions-build-file.name}" dir="${com.mbeddr.tutorial.build-file.location}" target="${build-plugin.task}" />
  </target>     
  
  <target name="test-tutorial"  >	  
	  <ant antfile="${com.mbeddr.tutorial.tests-build-file.name}" dir="${com.mbeddr.tutorial.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.tutorial.tests-build-file.name}" dir="${com.mbeddr.tutorial.build-file.location}" target="${clean-generated-code.task}" />	  		  
	  <ant antfile="${com.mbeddr.tutorial.tests-build-file.name}" dir="${com.mbeddr.tutorial.build-file.location}" target="${generate-code.task}" />
	  <ant antfile="${com.mbeddr.tutorial.tests-build-file.name}" dir="${com.mbeddr.tutorial.build-file.location}" target="${build-plugin.task}" />
  </target>     
  
  <target name="make-tests" description="Run 'make test' for child Makefiles">
	  <echo message="path=${make-tests.dir}"/>
  	  <make-tests workingDirectory="${make-tests.dir}"/>
  </target>
  	  	  
</project>