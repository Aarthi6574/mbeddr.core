package com.mbeddr.core.debug.test.runtime.m1;

/*Generated by MPS */

import com.mbeddr.core.debug.debugger.IMSession;
import com.google.inject.name.Named;
import jetbrains.mps.smodel.SModel;

public class TRSessionAttachedStateImpl extends TRAbstractSessionStateImpl {
  public TRSessionAttachedStateImpl(ITRProgramState programStateManager, ITRBreakpointRegistry breakpointManager, ITRStepper stepperm, IMSession mSession, @Named("binaryPath") String binaryPath, @Named("tracePath") String tracePath, SModel model, ITRSessionStateContext context) {
    super(programStateManager, breakpointManager, stepperm, mSession, binaryPath, tracePath, model, context);
  }

  @Override
  public void attach() throws TRSessionFailedException {
    throw new TRSessionFailedException("Session already attached");
  }

  @Override
  public void resume() throws TRSessionNotAttachedException, TRExecutingDebugCommandFailedException {
  }

  @Override
  public ITRStepper getStepper() throws TRSessionNotAttachedException {
    return null;
  }

  @Override
  public ITRBreakpointRegistry getBreakpointRegistry() throws TRSessionNotAttachedException {
    return null;
  }

  @Override
  public ITRProgramState getProgramStateAccessor() throws TRSessionNotAttachedException {
    return null;
  }

  @Override
  public void terminate() throws TRSessionNotAttachedException, TRSessionFailedException {
  }
}
