package com.mbeddr.core.debug.test.runtime.m1;

/*Generated by MPS */

import com.mbeddr.core.debug.debugger.AbstractMIBreakpoint;
import jetbrains.mps.debug.api.breakpoints.BreakpointLocation;
import jetbrains.mps.smodel.SNode;
import com.intellij.openapi.project.Project;
import jetbrains.mps.smodel.SNodePointer;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.debug.api.breakpoints.IBreakpointKind;
import com.mbeddr.core.debug.debugger.MIBreakpointKind;
import org.jetbrains.annotations.NonNls;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class TRBreakpointImpl extends AbstractMIBreakpoint implements ITRBreakpoint {
  private BreakpointLocation myLocation;
  private String name;

  public TRBreakpointImpl(SNode node, Project project, String name) {
    super(project);
    this.name = name;
    myLocation = new BreakpointLocation(new SNodePointer(node));
  }

  @NotNull
  public IBreakpointKind getKind() {
    return MIBreakpointKind.STATEMENT_BREAKPOINT;
  }

  public void removeFromRunningSessions() {
  }

  public void addToRunningSessions() {
  }

  @NonNls
  public String getPresentation() {
    return myLocation.getPresentation();
  }

  @NotNull
  public BreakpointLocation getLocation() {
    return myLocation;
  }

  public String getName() {
    return this.name;
  }

  public SNode getBreakable() {
    return SNodeOperations.cast(myLocation.getNodePointer().getNode(), "com.mbeddr.core.debug.structure.IBreakpointSupport");
  }
}
