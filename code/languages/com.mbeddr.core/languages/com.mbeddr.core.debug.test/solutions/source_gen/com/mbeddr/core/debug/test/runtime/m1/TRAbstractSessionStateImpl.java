package com.mbeddr.core.debug.test.runtime.m1;

/*Generated by MPS */

import com.mbeddr.core.debug.debugger.IMListener;
import com.mbeddr.core.debug.debugger.IMSession;
import jetbrains.mps.smodel.SModel;
import com.google.inject.name.Named;
import jetbrains.mps.debug.api.programState.IThread;

public abstract class TRAbstractSessionStateImpl implements ITRSession, IMListener {
  protected ITRProgramState programStateManager;
  protected ITRBreakpointRegistry breakpointManager;
  protected ITRStepper stepper;
  protected IMSession mSession;
  protected SModel model;
  protected String tracePath;
  protected String binaryPath;
  protected ITRSessionStateContext context;

  public TRAbstractSessionStateImpl(ITRProgramState programStateManager, ITRBreakpointRegistry breakpointManager, ITRStepper stepperm, IMSession mSession, @Named("binaryPath") String binaryPath, @Named("tracePath") String tracePath, SModel model, ITRSessionStateContext context) {
    this.programStateManager = programStateManager;
    this.breakpointManager = breakpointManager;
    this.stepper = stepperm;
    this.mSession = mSession;
    this.model = model;
    this.tracePath = tracePath;
    this.binaryPath = binaryPath;
    this.context = context;
  }

  @Override
  public void terminate() throws TRSessionNotAttachedException, TRSessionFailedException {
    throw new TRSessionNotAttachedException();
  }

  @Override
  public ITRProgramState getProgramStateAccessor() throws TRSessionNotAttachedException {
    throw new TRSessionNotAttachedException();
  }

  @Override
  public ITRBreakpointRegistry getBreakpointRegistry() throws TRSessionNotAttachedException {
    throw new TRSessionNotAttachedException();
  }

  @Override
  public ITRStepper getStepper() throws TRSessionNotAttachedException {
    throw new TRSessionNotAttachedException();
  }

  @Override
  public void resume() throws TRSessionNotAttachedException, TRExecutingDebugCommandFailedException {
    throw new TRSessionNotAttachedException();
  }

  public void debuggerDetached() {
    throw new UnsupportedOperationException();
  }

  public void debuggerResumed() {
    throw new IllegalStateException();
  }

  public void debuggerAttached() {
    throw new IllegalStateException();
  }

  public void debuggerSuspended(IThread programState) {
    throw new IllegalStateException();
  }

  public void recoverableErrorOccured(String message) {
    throw new IllegalStateException();
  }

  public void unrecoverableErrorOccured(String message) {
    throw new IllegalStateException();
  }

  public void attach() throws TRSessionFailedException {
    throw new IllegalStateException();
  }
}
