package com.mbeddr.core.runconfiguration.plugin;

/*Generated by MPS */

import jetbrains.mps.execution.api.settings.SettingsEditorEx;
import jetbrains.mps.baseLanguage.runConfigurations.runtime.MainNodeChooser;
import jetbrains.mps.execution.configurations.lib.Node_Configuration_Editor;
import com.intellij.openapi.util.Disposer;
import org.jetbrains.annotations.NotNull;
import javax.swing.JPanel;
import java.awt.BorderLayout;
import javax.swing.JLabel;
import com.intellij.openapi.options.ConfigurationException;

public class MbeddrExecutableConfiguration_Configuration_Editor extends SettingsEditorEx<MbeddrExecutableConfiguration_Configuration> {
  private MainNodeChooser myBinaryChooser;
  private Node_Configuration_Editor myBinary;

  public MbeddrExecutableConfiguration_Configuration_Editor(Node_Configuration_Editor binary) {
    myBinary = binary;
  }

  public void disposeEditor() {
    Disposer.dispose(myBinary);
  }

  @NotNull
  public JPanel createEditor() {
    myBinaryChooser = myBinary.createEditor();
    JPanel panel = new JPanel(new BorderLayout());
    JLabel l = new JLabel("Executable: ");
    panel.add(l, BorderLayout.WEST);
    panel.add(myBinaryChooser, BorderLayout.CENTER);
    return panel;
  }

  public void applyEditorTo(final MbeddrExecutableConfiguration_Configuration configuration) throws ConfigurationException {
    myBinary.applyEditorTo(configuration.getBinary());
  }

  public void resetEditorFrom(final MbeddrExecutableConfiguration_Configuration configuration) {
    myBinary.resetEditorFrom(configuration.getBinary());
  }
}
