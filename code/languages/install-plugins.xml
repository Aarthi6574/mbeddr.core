<project name="mbeddr download and deploy plugins" default="install">
  <property file="build.properties"/>
  
  <!-- url/mps properties -->
  <property name="plugins.folder.name" value="plugins"/>
  <property name="base-url" value="https://mbeddr-build.itemis.de/teamcity/guestAuth/repository/download"/>
  <property name="latest-build" value="latest.lastSuccessful"/>
  <!-- multiline -->  
  <property name="multiline.zip-file.name" value="mps-multiline.zip" />
  <property name="multiline.expanded-folder.name" value="mps-multiline" />
  <property name="multiline.build-id" value="bt28" />  
  <!-- richtext -->  
  <property name="richtext.zip-file.name" value="mps-richtext.zip" />
  <property name="richtext.expanded-folder.name" value="mps-richtext" />
  <property name="richtext.build-id" value="bt29" />
  <!-- editor-override -->
  <property name="editor-override.zip-file.name" value="mps-editor-override.zip" />
  <property name="editor-override.expanded-folder.name" value="mps-editor-override" />  
  <property name="editor-override.build-id" value="bt27" />   
  <!-- spawner -->
  <property name="spawner.suburl" value="com.mbeddr.spawner.build" /> 
  <property name="spawner.zip-file.name" value="com.mbeddr.spawner.zip" />
  <property name="spawner.expanded-folder.name" value="mbeddr.spawner" />
  <property name="spawner.build-id" value="bt3" />
   
  <!-- validations -->
  <fail unless="mps.home">mps.home must be set in your build.properties</fail>
  <fail message="Your MPS installation (${mps.home}) doesn't contain a ${plugins.folder.name} folder">
      <condition>
          <not>
              <resourcecount count="1">
				  <dirset dir="${mps.home}" >
					  <include name="${plugins.folder.name}"/>
				  </dirset> 
              </resourcecount>
          </not>
      </condition>
  </fail>

  <target name="install">
	  <antcall target="clean-installed-plugins"/>
	  <antcall target="download-plugins"/>
	  <antcall target="unzip-plugins"/>
	  <antcall target="clean-downloaded-artifacts"/>	  
  </target>
  
  <target name="clean-installed-plugins">
	  <delete dir="${mps.home}/${plugins.folder}/${editor-override.expanded-folder.name}" verbose="true" />
	  <delete dir="${mps.home}/${plugins.folder}/${multiline.expanded-folder.name}" verbose="true" />
	  <delete dir="${mps.home}/${plugins.folder}/${richtext.expanded-folder.name}" verbose="true" />
	  <delete dir="${mps.home}/${plugins.folder}/${spawner.expanded-folder.name}" verbose="true" />
  </target>	
  
  <target name="download-plugins" depends="clean-installed-plugins" >
	  <get src="${base-url}/${multiline.build-id}/${latest-build}/${multiline.zip-file.name}" dest="${mps.home}/${plugins.folder.name}" verbose="true" skipexisting="true" usetimestamp="true"/>
	  <get src="${base-url}/${richtext.build-id}/${latest-build}/${richtext.zip-file.name}" dest="${mps.home}/${plugins.folder.name}" verbose="true" skipexisting="true" usetimestamp="true"/>
	  <get src="${base-url}/${editor-override.build-id}/${latest-build}/${editor-override.zip-file.name}" dest="${mps.home}/${plugins.folder.name}" verbose="true" skipexisting="true" usetimestamp="true"/>
	  <get src="${base-url}/${spawner.build-id}/${latest-build}/${spawner.suburl}/${spawner.zip-file.name}" dest="${mps.home}/${plugins.folder.name}" verbose="true" skipexisting="true" usetimestamp="true"/>	  
  </target>	

  <target name="unzip-plugins" depends="clean-installed-plugins,download-plugins">
	  <unzip src="${mps.home}/${plugins.folder.name}/${multiline.zip-file.name}" dest="${mps.home}/${plugins.folder.name}" overwrite="true" />
	  <unzip src="${mps.home}/${plugins.folder.name}/${richtext.zip-file.name}" dest="${mps.home}/${plugins.folder.name}" overwrite="true" />
	  <unzip src="${mps.home}/${plugins.folder.name}/${editor-override.zip-file.name}" dest="${mps.home}/${plugins.folder.name}" overwrite="true" />
	  <unzip src="${mps.home}/${plugins.folder.name}/${spawner.zip-file.name}" dest="${mps.home}/${plugins.folder.name}" overwrite="true" />  
  </target>	
      
  <target name="clean-downloaded-artifacts" depends="clean-installed-plugins,download-plugins,unzip-plugins">
	  <delete file="${mps.home}/${plugins.folder.name}/${multiline.zip-file.name}"/>
	  <delete file="${mps.home}/${plugins.folder.name}/${editor-override.zip-file.name}"/>
	  <delete file="${mps.home}/${plugins.folder.name}/${richtext.zip-file.name}"/>
	  <delete file="${mps.home}/${plugins.folder.name}/${spawner.zip-file.name}"/>
  </target>	  

</project>