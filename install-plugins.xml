<project name="mbeddr download and deploy plugins" default="install-plugins">
  <property file="build.properties"/>
  
  <!-- properties -->
  <property name="plugins.folder" value="plugins"/>
  <property name="base-url" value="https://mbeddr-build.itemis.de/teamcity/guestAuth/repository/download"/>
  <property name="latest-build" value="latest.lastSuccessful"/>
  <property name="multiline.file" value="mps-multiline.zip" />
  <property name="multiline.build-id" value="bt28" />
  <property name="richtext.file" value="mps-richtext.zip" />
  <property name="richtext.build-id" value="bt29" />
  <property name="editor-override.file" value="mps-editor-override.zip" />
  <property name="editor-override.build-id" value="bt27" />   
  <property name="spawner.folder" value="com.mbeddr.spawner.build" /> 
  <property name="spawner.file" value="com.mbeddr.spawner.zip" />
  <property name="spawner.build-id" value="bt3" />
   
  <!-- validations -->
  <fail unless="mps.home">mps.home must be set in your build.properties</fail>
  <fail message="Your MPS installation (${mps.home}) doesn't contain a ${plugins.folder} folder">
      <condition>
          <not>
              <resourcecount count="1">
				  <dirset dir="${mps.home}" >
					  <include name="${plugins.folder}"/>
				  </dirset> 
              </resourcecount>
          </not>
      </condition>
  </fail>

  <target name="install-plugins">
	  <!-- multiline plugin -->
	  <echo message="Downloading multiline plugin"/>
	  <get src="${base-url}/${multiline.build-id}/${latest-build}/${multiline.file}" dest="${mps.home}/${plugins.folder}" verbose="true" skipexisting="false" usetimestamp="false"/>
	  <echo message="Deploying multiline plugin"/>	  
	  <unzip src="${mps.home}/${plugins.folder}/${multiline.file}" dest="${mps.home}/${plugins.folder}" overwrite="true" />
	  <delete file="${mps.home}/${plugins.folder}/${multiline.file}"/>
	  <echo message="SUCCESSFULLY deployed multiline plugin"/>
	  <echo message=" "/>
	  	  
	  <!-- richtext plugin -->
	  <echo message="Downloading richtext plugin"/>
	  <get src="${base-url}/${richtext.build-id}/${latest-build}/${richtext.file}" dest="${mps.home}/${plugins.folder}" verbose="true" skipexisting="false" usetimestamp="false"/>
	  <echo message="Deploying richtext plugin"/>	  	  
	  <unzip src="${mps.home}/${plugins.folder}/${richtext.file}" dest="${mps.home}/${plugins.folder}" overwrite="true" />
	  <delete file="${mps.home}/${plugins.folder}/${richtext.file}"/>
	  <echo message="SUCCESSFULLY deployed richtext plugin"/>	  
	  <echo message=" "/>
	  	   
	  <!-- editor-override plugin -->
	  <echo message="Downloading editor-override plugin"/>	  
	  <get src="${base-url}/${editor-override.build-id}/${latest-build}/${editor-override.file}" dest="${mps.home}/${plugins.folder}" verbose="true" skipexisting="false" usetimestamp="false"/>
	  <echo message="Deploying editor-override plugin"/>	  	  	  
	  <unzip src="${mps.home}/${plugins.folder}/${editor-override.file}" dest="${mps.home}/${plugins.folder}" overwrite="true" />
	  <delete file="${mps.home}/${plugins.folder}/${editor-override.file}"/>
	  <echo message="SUCCESSFULLY deployed editor-override plugin"/>	  	  
	  <echo message=" "/> 
	  
	  <!-- spawner plugin -->
	  <echo message="Downloading spawner plugin"/>
	  <get src="${base-url}/${spawner.build-id}/${latest-build}/${spawner.folder}/${spawner.file}" dest="${mps.home}/${plugins.folder}" verbose="true" skipexisting="false" usetimestamp="false"/>
	  <echo message="Deploying spawner plugin"/>	  	  	  	  
	  <unzip src="${mps.home}/${plugins.folder}/${spawner.file}" dest="${mps.home}/${plugins.folder}" overwrite="true" />
	  <delete file="${mps.home}/${plugins.folder}/${spawner.file}"/>	  
	  <echo message="SUCCESSFULLY deployed spawner plugin"/>	  	  	  
  </target>	    
</project>